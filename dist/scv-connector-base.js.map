{"version":3,"sources":["webpack://SCVConnectorBase/webpack/universalModuleDefinition","webpack://SCVConnectorBase/webpack/bootstrap","webpack://SCVConnectorBase/./node_modules/@babel/runtime/helpers/createClass.js","webpack://SCVConnectorBase/./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack://SCVConnectorBase/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://SCVConnectorBase/./node_modules/@babel/runtime/regenerator/index.js","webpack://SCVConnectorBase/./node_modules/@babel/runtime/helpers/typeof.js","webpack://SCVConnectorBase/./node_modules/@babel/runtime/helpers/asyncToGenerator.js","webpack://SCVConnectorBase/./node_modules/@babel/runtime/helpers/getPrototypeOf.js","webpack://SCVConnectorBase/./node_modules/@babel/runtime/helpers/inherits.js","webpack://SCVConnectorBase/./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","webpack://SCVConnectorBase/./node_modules/regenerator-runtime/runtime.js","webpack://SCVConnectorBase/./node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack://SCVConnectorBase/./node_modules/@babel/runtime/helpers/assertThisInitialized.js","webpack://SCVConnectorBase/./src/main/constants.js","webpack://SCVConnectorBase/./src/main/downloadData.js","webpack://SCVConnectorBase/./src/main/logger.js","webpack://SCVConnectorBase/./src/main/types.js","webpack://SCVConnectorBase/./src/main/mosUtil.js","webpack://SCVConnectorBase/./src/main/baseConnector.js","webpack://SCVConnectorBase/./src/main/index.js"],"names":["MESSAGE_TYPE","SETUP_CONNECTOR","CONNECTOR_READY","LOG","TELEPHONY_EVENT_DISPATCHED","ACCEPT_CALL","DECLINE_CALL","END_CALL","MUTE","UNMUTE","HOLD","RESUME","SET_AGENT_STATUS","GET_AGENT_STATUS","DIAL","SEND_DIGITS","GET_PHONE_CONTACTS","SWAP_PARTICIPANTS","ADD_PARTICIPANT","CONFERENCE","PAUSE_RECORDING","RESUME_RECORDING","LOGOUT","MESSAGE","WRAP_UP_CALL","AGENT_AVAILABLE","SET_AGENT_CONFIG","GET_SIGNED_RECORDING_URL","DOWNLOAD_VENDOR_LOGS","SUPERVISE_CALL","SUPERVISOR_BARGE_IN","SUPERVISOR_DISCONNECT","EVENT_TYPE","PREVIEW_CALL_STARTED","QUEUED_CALL_STARTED","CALL_STARTED","CALL_CONNECTED","CALL_FAILED","MUTE_TOGGLE","HOLD_TOGGLE","HANGUP","ERROR","PHONE_CONTACTS","PARTICIPANT_ADDED","PARTICIPANT_CONNECTED","PARTICIPANT_REMOVED","LOGIN_STARTED","LOGIN_RESULT","LOGOUT_RESULT","RECORDING_TOGGLE","PARTICIPANTS_SWAPPED","PARTICIPANTS_CONFERENCED","SHOW_LOGIN","SET_AGENT_STATUS_RESULT","GET_AGENT_STATUS_RESULT","WRAP_UP_ENDED","AFTER_CALL_WORK_STARTED","AGENT_CONFIG_UPDATED","AGENT_ERROR","SOFTPHONE_ERROR","SIGNED_RECORDING_URL","UPDATE_AUDIO_STATS","UPDATE_AUDIO_STATS_COMPLETED","SUPERVISOR_BARGED_IN","SUPERVISOR_CALL_STARTED","SUPERVISOR_CALL_CONNECTED","SUPERVISOR_HANGUP","CALL_BARGED_IN","ERROR_TYPE","GENERIC_ERROR","MICROPHONE_NOT_SHARED","UNSUPPORTED_BROWSER","AUTHENTICATION_ERROR","INVALID_AGENT_STATUS","CAN_NOT_SET_AGENT_STATUS","LOGIN_REQUIRED","CAN_NOT_ACCEPT_THE_CALL","CAN_NOT_DECLINE_THE_CALL","CAN_NOT_END_THE_CALL","CAN_NOT_HOLD_CALL","CAN_NOT_RESUME_CALL","CAN_NOT_MUTE_CALL","CAN_NOT_UNMUTE_CALL","CAN_NOT_TOGGLE_MUTE","CAN_NOT_TOGGLE_HOLD","CAN_NOT_TOGGLE_RECORD","INVALID_PARTICIPANT","CAN_NOT_LOG_IN","CAN_NOT_LOG_OUT","INVALID_PARAMS","CAN_NOT_GET_PHONE_CONTACTS","CAN_NOT_SWAP_PARTICIPANTS","CAN_NOT_CONFERENCE","INVALID_DESTINATION","INVALID_PHONE_NUMBER","CAN_NOT_HANGUP_PARTICIPANT","CAN_NOT_ADD_PARTICIPANT","CAN_NOT_CONNECT_PARTICIPANT","CAN_NOT_START_THE_CALL","CAN_NOT_PAUSE_RECORDING","CAN_NOT_RESUME_RECORDING","CAN_NOT_SET_AGENT_CONFIG","CAN_NOT_UPDATE_PHONE_NUMBER","CAN_NOT_GET_SIGNED_RECORDING_URL","CAN_NOT_SUPERVISE_CALL","CAN_NOT_DISCONNECT_SUPERVISOR","CAN_NOT_BARGE_IN_SUPERVISOR","CAN_NOT_BARGE_IN_CALL","CAN_NOT_GET_AGENT_STATUS","AGENT_STATUS","ONLINE","OFFLINE","ACW","CALLBACK_MISSED_OR_REJECTED","PARTICIPANT_TYPE","AGENT","INITIAL_CALLER","THIRD_PARTY","SUPERVISOR","CALL_TYPE","INBOUND","OUTBOUND","CALLBACK","DIALER_TYPE","OUTBOUND_PREVIEW","NONE","CONTACT_TYPE","PHONEBOOK","QUEUE","PHONENUMBER","AGENT_CONFIG_TYPE","SHOW_AGENT_SETTINGS","RECORD","MERGE","SWAP","PHONES","SELECTED_PHONE","DEBUG_ENABLED","CONTACT_SEARCH","VENDOR_PROVIDED_AVAILABILITY","SUPERVISOR_LISTEN_IN","MOS","CALL_STATE","RINGING","CONNECTED","TRANSFERRING","TRANSFERRED","ENDED","PHONE_TYPE","DESK_PHONE","SOFT_PHONE","HANGUP_REASON","PHONE_CALL_ERROR","PHONE_CALL_ENDED","AGENT_AVAILABILITY","AVAILABLE","BUSY","REMOVE_PARTICIPANT_VARIANT","ALWAYS","NEVER","ALWAYS_EXCEPT_ON_HOLD","LOG_LEVEL","INFO","LOG_SOURCE","SYSTEM","PARTNER","AGENT_STATUS_TYPE","SALESFORCE_PRESENCE","EXTERNAL_PRESENCE","CONNECTOR_CONFIG_EXPOSED_FIELDS","CONNECTOR_CONFIG_EXPOSED_FIELDS_STARTSWITH","downloadData","data","fileName","fileType","document","dataStr","JSON","stringify","file","Blob","type","a","createElement","blobURL","URL","createObjectURL","download","href","body","appendChild","click","removeChild","revokeObjectURL","MAX_LOGS_SIZE","_strify","obj","LOGS_SIZE","logs","_log","logLevel","logMessage","logSource","Error","constants","logStr","Date","toISOString","join","length","push","log","getLogs","parse","downloadLogs","getTime","Constants","AgentStatusType","Phone","number","Validator","validateEnum","Object","values","validateString","MuteToggleResult","isMuted","ActiveCallsResult","activeCalls","forEach","activeCall","validateClassObject","PhoneCall","AgentConfigResult","hasMute","hasRecord","hasMerge","hasSwap","hasSignedRecordingUrl","phones","selectedPhone","debugEnabled","hasContactSearch","hasAgentAvailability","supportsMos","hasSupervisorListenIn","hasSupervisorBargeIn","validateBoolean","Array","AgentConfig","RecordingToggleResult","isRecordingPaused","contactId","initialContactId","instanceId","region","ParticipantResult","initialCallHasEnded","callInfo","phoneNumber","callId","CallInfo","PhoneContactsResult","contacts","contact","Contact","CallResult","call","undefined","HangupResult","calls","HoldToggleResult","isThirdPartyOnHold","isCustomerOnHold","SignedRecordingUrlResult","success","url","duration","validateNumber","InitResult","showLogin","loginFrameHeight","GenericResult","LogoutResult","callStateTimestamp","isOnHold","initialCallId","isSoftphoneCall","acceptEnabled","declineEnabled","muteEnabled","swapEnabled","conferenceEnabled","holdEnabled","recordEnabled","addCallerEnabled","extensionEnabled","isReplayable","isBargeable","isExternalTransfer","removeParticipantVariant","validateDate","id","name","prefix","extension","endpointARN","queue","availability","PhoneCallAttributes","voiceCallId","participantType","dialerType","parentId","callType","state","callAttributes","reason","closeCallOnError","agentStatus","VendorConnector","config","statusInfo","logMessageToVendor","digits","call1","call2","message","recordingUrl","vendorCallKey","payload","value","enumValues","regex","RegExp","test","object","className","AgentStatusInfo","statusType","statusId","statusApiName","statusName","SupervisedCallInfo","from","to","supervisorName","isBargedIn","AudioStats","stats","isAudioStatsCompleted","audioStatsElement","AudioStatsElement","inputChannelStats","outputChannelStats","StatsInfo","packetsCount","packetsLost","jitterBufferMillis","roundTripTimeMillis","statsCount","SuperviseCallResult","SupervisorHangupResult","audioStatus","getAvgStats","streamType","getMOSByStream","avgStats","effectiveLatency","R","enableMos","getMOS","inputChannelMOS","ouputChannelMOS","isNaN","Math","min","initAudioStats","updateAudioStats","statsArray","channelPort","vendorConnector","agentAvailable","isSupervisorConnected","getErrorType","e","sanitizePayload","isArray","sanitizedPayload","element","property","getErrorMessage","dispatchEventLog","eventType","isError","postMessage","dispatchEvent","registerLog","telephonyEventType","telephonyEventPayload","dispatchError","errorType","error","console","setConnectorReady","getAgentConfig","agentConfigResult","getActiveCalls","activeCallsResult","agentConfig","callInProgress","channelMessageHandler","toLowerCase","supervisorDisconnect","hangupPayload","acceptCall","declineCall","endCall","mute","publishEvent","unmute","hold","resume","setAgentStatus","getAgentStatus","dial","sendDigits","getPhoneContacts","filter","map","swap","callToHold","callToResume","conference","addParticipant","pauseRecording","resumeRecording","logout","handleMessage","wrapUpCall","isAvailable","shouldReplay","isSupervisorCall","isReplayedCall","setAgentConfig","result","getSignedRecordingUrl","signedRecordingUrlResult","superviseCall","supervisorBargeIn","windowMessageHandler","sfDomain","originUrl","origin","protocol","hostname","ports","onmessage","exposedConnectorConfig","connectorConfig","init","window","removeEventListener","prop","hasOwnProperty","keys","key","startsWith","validatePayload","payloadType","initializeConnector","connector","addEventListener","publishLog","publishError","arguments","REMOTE_CONTROLLER","transferCall","pop","event","mos"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;QCVA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;AClFA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA,4G;;;;;;ACnBA;AACA;AACA;AACA;AACA;;AAEA,+G;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA;;AAEA,+G;;;;;;ACfA,iBAAiB,mBAAO,CAAC,CAAqB;;;;;;;ACA9C;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;;AAEA,uG;;;;;;ACVA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA,iH;;;;;;ACpCA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA,+G;;;;;;ACPA,qBAAqB,mBAAO,CAAC,EAAqB;;AAElD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;;AAEA,yG;;;;;;ACpBA,cAAc,mBAAO,CAAC,CAAa;;AAEnC,4BAA4B,mBAAO,CAAC,EAA4B;;AAEhE;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA,0H;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa;AACb,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,KAAK;AACL,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;;AAEA;AACA;AACA,wCAAwC,WAAW;AACnD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,2BAA2B;AAC3B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC,cAAc;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iCAAiC,kBAAkB;AACnD;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA,iBAAiB;;AAEjB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB,iBAAiB;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,8CAA8C,QAAQ;AACtD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA,WAAW;AACX;AACA;AACA;;AAEA,WAAW;AACX;AACA;AACA;;AAEA,WAAW;AACX;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,KAAK;;AAEL;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;A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","file":"scv-connector-base.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"SCVConnectorBase\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SCVConnectorBase\"] = factory();\n\telse\n\t\troot[\"SCVConnectorBase\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 12);\n","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","module.exports = require(\"regenerator-runtime\");\n","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\n\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\n\nvar assertThisInitialized = require(\"./assertThisInitialized.js\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","/*\n * Copyright (c) 2021, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: BSD-3-Clause\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause\n */\n\nexport default {\n    MESSAGE_TYPE: {\n        // Framework Message Types\n        SETUP_CONNECTOR: 'SETUP_CONNECTOR',\n        CONNECTOR_READY: 'CONNECTOR_READY',\n\n        // Telephony Message Types: sent from SFDC to Telephony Vendor\n        LOG: 'LOG',\n        TELEPHONY_EVENT_DISPATCHED: 'TELEPHONY_EVENT_DISPATCHED',\n        ACCEPT_CALL: 'ACCEPT_CALL',\n        DECLINE_CALL: 'DECLINE_CALL',\n        END_CALL: 'END_CALL',\n        MUTE: 'MUTE',\n        UNMUTE: 'UNMUTE',\n        HOLD: 'HOLD',\n        RESUME: 'RESUME',\n        SET_AGENT_STATUS: 'SET_AGENT_STATUS',\n        GET_AGENT_STATUS: 'GET_AGENT_STATUS',\n        DIAL: 'DIAL',\n        SEND_DIGITS: 'SEND_DIGITS',\n        GET_PHONE_CONTACTS: 'GET_PHONE_CONTACTS',\n        SWAP_PARTICIPANTS: 'SWAP_PARTICIPANTS',\n        ADD_PARTICIPANT: 'ADD_PARTICIPANT',\n        CONFERENCE: 'CONFERENCE',\n        PAUSE_RECORDING: 'PAUSE_RECORDING',\n        RESUME_RECORDING: 'RESUME_RECORDING',\n        LOGOUT: 'LOGOUT',\n        MESSAGE: 'MESSAGE',\n        WRAP_UP_CALL: 'WRAP_UP_CALL',\n        AGENT_AVAILABLE: 'AGENT_AVAILABLE',\n        SET_AGENT_CONFIG: 'SET_AGENT_CONFIG',\n        GET_SIGNED_RECORDING_URL: 'GET_SIGNED_RECORDING_URL',\n        DOWNLOAD_VENDOR_LOGS: 'DOWNLOAD_VENDOR_LOGS',\n        SUPERVISE_CALL: 'SUPERVISE_CALL',\n        SUPERVISOR_BARGE_IN : 'SUPERVISOR_BARGE_IN',\n        SUPERVISOR_DISCONNECT: 'SUPERVISOR_DISCONNECT'\n    },\n    EVENT_TYPE: {\n        PREVIEW_CALL_STARTED: 'PREVIEW_CALL_STARTED',\n        QUEUED_CALL_STARTED: 'QUEUED_CALL_STARTED',\n        CALL_STARTED: 'CALL_STARTED',\n        CALL_CONNECTED: 'CALL_CONNECTED',\n        CALL_FAILED: 'CALL_FAILED',\n        MUTE_TOGGLE: 'MUTE_TOGGLE',\n        HOLD_TOGGLE: 'HOLD_TOGGLE',\n        HANGUP: 'HANGUP',\n        ERROR: 'ERROR',\n        PHONE_CONTACTS: 'PHONE_CONTACTS',\n        PARTICIPANT_ADDED: 'PARTICIPANT_ADDED',\n        PARTICIPANT_CONNECTED: 'PARTICIPANT_CONNECTED',\n        PARTICIPANT_REMOVED: 'PARTICIPANT_REMOVED',\n        LOGIN_STARTED: 'LOGIN_STARTED',\n        LOGIN_RESULT: 'LOGIN_RESULT', // info about timeout, error, success etc\n        LOGOUT_RESULT: 'LOGOUT_RESULT',\n        RECORDING_TOGGLE: 'RECORDING_TOGGLE',\n        PARTICIPANTS_SWAPPED: 'PARTICIPANTS_SWAPPED',\n        PARTICIPANTS_CONFERENCED: 'PARTICIPANTS_CONFERENCED',\n        SHOW_LOGIN: 'SHOW_LOGIN',\n        SET_AGENT_STATUS_RESULT: 'SET_AGENT_STATUS_RESULT',\n        GET_AGENT_STATUS_RESULT: 'GET_AGENT_STATUS_RESULT',\n        WRAP_UP_ENDED: 'WRAP_UP_ENDED',\n        MESSAGE: 'MESSAGE',\n        AFTER_CALL_WORK_STARTED: 'AFTER_CALL_WORK_STARTED',\n        AGENT_CONFIG_UPDATED: 'AGENT_CONFIG_UPDATED',\n        AGENT_ERROR: 'AGENT_ERROR',\n        SOFTPHONE_ERROR: 'SOFTPHONE_ERROR',\n        SIGNED_RECORDING_URL: 'SIGNED_RECORDING_URL',\n        UPDATE_AUDIO_STATS: 'UPDATE_AUDIO_STATS',\n        UPDATE_AUDIO_STATS_COMPLETED: 'UPDATE_AUDIO_STATS_COMPLETED',\n        SUPERVISOR_BARGED_IN: 'SUPERVISOR_BARGED_IN',\n        SUPERVISOR_CALL_STARTED : 'SUPERVISOR_CALL_STARTED',\n        SUPERVISOR_CALL_CONNECTED: 'SUPERVISOR_CALL_CONNECTED',\n        SUPERVISOR_HANGUP : 'SUPERVISOR_HANGUP',\n        CALL_BARGED_IN : 'CALL_BARGED_IN',\n        SET_AGENT_STATUS: 'SET_AGENT_STATUS',\n        GET_AGENT_STATUS: 'GET_AGENT_STATUS'\n    },\n    ERROR_TYPE: {\n        GENERIC_ERROR: 'GENERIC_ERROR',\n        AGENT_ERROR: 'AGENT_ERROR',\n        MICROPHONE_NOT_SHARED: 'MICROPHONE_NOT_SHARED',\n        UNSUPPORTED_BROWSER: 'UNSUPPORTED_BROWSER',\n        AUTHENTICATION_ERROR: 'AUTHENTICATION_ERROR',\n        INVALID_AGENT_STATUS: 'INVALID_AGENT_STATUS',\n        CAN_NOT_SET_AGENT_STATUS: 'CAN_NOT_SET_AGENT_STATUS',\n        LOGIN_REQUIRED: 'LOGIN_REQUIRED',\n        CAN_NOT_ACCEPT_THE_CALL: 'CAN_NOT_ACCEPT_THE_CALL',\n        CAN_NOT_DECLINE_THE_CALL: 'CAN_NOT_DECLINE_THE_CALL',\n        CAN_NOT_END_THE_CALL: 'CAN_NOT_END_THE_CALL',\n        CAN_NOT_HOLD_CALL: 'CAN_NOT_HOLD_CALL',\n        CAN_NOT_RESUME_CALL: 'CAN_NOT_RESUME_CALL',\n        CAN_NOT_MUTE_CALL: 'CAN_NOT_MUTE_CALL',\n        CAN_NOT_UNMUTE_CALL: 'CAN_NOT_UNMUTE_CALL',\n        CAN_NOT_TOGGLE_MUTE: 'CAN_NOT_TOGGLE_MUTE',\n        CAN_NOT_TOGGLE_HOLD: 'CAN_NOT_TOGGLE_HOLD',\n        CAN_NOT_TOGGLE_RECORD: 'CAN_NOT_TOGGLE_RECORD',\n        INVALID_PARTICIPANT: 'INVALID_PARTICIPANT',\n        CAN_NOT_LOG_IN: 'CAN_NOT_LOG_IN',\n        CAN_NOT_LOG_OUT: 'CAN_NOT_LOG_OUT',\n        INVALID_PARAMS: 'INVALID_PARAMS',\n        CAN_NOT_GET_PHONE_CONTACTS: 'CAN_NOT_GET_PHONE_CONTACTS',\n        CAN_NOT_SWAP_PARTICIPANTS: 'CAN_NOT_SWAP_PARTICIPANTS',\n        CAN_NOT_CONFERENCE: 'CAN_NOT_CONFERENCE',\n        INVALID_DESTINATION: 'INVALID_DESTINATION',\n        INVALID_PHONE_NUMBER: 'INVALID_PHONE_NUMBER',\n        CAN_NOT_HANGUP_PARTICIPANT: 'CAN_NOT_HANGUP_PARTICIPANT',\n        CAN_NOT_ADD_PARTICIPANT: 'CAN_NOT_ADD_PARTICIPANT',\n        CAN_NOT_CONNECT_PARTICIPANT: 'CAN_NOT_CONNECT_PARTICIPANT',\n        CAN_NOT_START_THE_CALL: 'CAN_NOT_START_THE_CALL',\n        CAN_NOT_PAUSE_RECORDING: 'CAN_NOT_PAUSE_RECORDING',\n        CAN_NOT_RESUME_RECORDING: 'CAN_NOT_RESUME_RECORDING',\n        CAN_NOT_SET_AGENT_CONFIG: 'CAN_NOT_SET_AGENT_CONFIG',\n        CAN_NOT_UPDATE_PHONE_NUMBER: 'CAN_NOT_UPDATE_PHONE_NUMBER',\n        CAN_NOT_GET_SIGNED_RECORDING_URL: 'CAN_NOT_GET_SIGNED_RECORDING_URL',\n        CAN_NOT_SUPERVISE_CALL : 'CAN_NOT_SUPERVISE_CALL',\n        CAN_NOT_DISCONNECT_SUPERVISOR : 'CAN_NOT_DISCONNECT_SUPERVISOR',\n        CAN_NOT_BARGE_IN_SUPERVISOR: 'CAN_NOT_BARGE_IN_SUPERVISOR',\n        CAN_NOT_BARGE_IN_CALL: 'CAN_NOT_BARGE_IN_CALL',\n        CAN_NOT_GET_AGENT_STATUS: 'CAN_NOT_GET_AGENT_STATUS'\n    },\n    AGENT_STATUS: {\n        ONLINE: 'Online',\n        OFFLINE: 'Offline',\n        ACW : 'AfterCallWork',\n        CALLBACK_MISSED_OR_REJECTED: 'CallbackMissedOrRejected' // Used only for Amazon; workaround for https://github.com/amazon-connect/amazon-connect-streams/issues/344\n    },\n    PARTICIPANT_TYPE: {\n        AGENT: 'Agent',\n        INITIAL_CALLER: 'Initial_Caller',\n        THIRD_PARTY: 'Third_Party',\n        SUPERVISOR: 'Supervisor'\n    },\n    CALL_TYPE: {\n        INBOUND: 'Inbound',\n        OUTBOUND: 'Outbound',\n        CALLBACK: 'Callback',\n        ADD_PARTICIPANT: 'AddParticipant'\n    },\n    DIALER_TYPE: {\n        OUTBOUND_PREVIEW: 'OutboundPreview',\n        NONE: 'None'\n    },\n    CONTACT_TYPE: {\n        PHONEBOOK: 'PhoneBook',\n        QUEUE: 'Queue',\n        PHONENUMBER: 'PhoneNumber',\n        AGENT: 'Agent'\n    },\n    AGENT_CONFIG_TYPE: {\n        SHOW_AGENT_SETTINGS: 'SHOW_AGENT_SETTINGS',\n        MUTE: 'MUTE',\n        RECORD: 'RECORD',\n        MERGE: 'MERGE',\n        SWAP: 'SWAP',\n        PHONES: 'PHONES',\n        SELECTED_PHONE: 'SELECTED_PHONE',\n        SIGNED_RECORDING_URL: 'SIGNED_RECORDING_URL',\n        DEBUG_ENABLED: 'DEBUG_ENABLED',\n        CONTACT_SEARCH: 'CONTACT_SEARCH',\n        VENDOR_PROVIDED_AVAILABILITY: 'VENDOR_PROVIDED_AVAILABILITY',\n        SUPERVISOR_LISTEN_IN: 'SUPERVISOR_LISTEN_IN',\n        SUPERVISOR_BARGE_IN: 'SUPERVISOR_BARGE_IN',\n        MOS: 'MOS'\n    },\n    CALL_STATE: {\n        RINGING: 'ringing',\n        CONNECTED: 'connected',\n        TRANSFERRING: 'transferring',\n        TRANSFERRED: 'transferred',\n        ENDED: 'ended'\n    },\n    PHONE_TYPE: {\n        DESK_PHONE: 'DESK_PHONE',\n        SOFT_PHONE: 'SOFT_PHONE'\n    },\n    HANGUP_REASON: {\n        PHONE_CALL_ERROR: \"error\",\n        PHONE_CALL_ENDED: \"ended\"\n    },\n    AGENT_AVAILABILITY: {\n        AVAILABLE: \"AVAILABLE\",\n        BUSY: \"BUSY\",\n        OFFLINE: \"OFFLINE\"\n    },\n    REMOVE_PARTICIPANT_VARIANT: {\n        ALWAYS : 'ALWAYS',\n        NEVER: 'NEVER',\n        ALWAYS_EXCEPT_ON_HOLD: 'ALWAYS_EXCEPT_ON_HOLD'\n    },\n    LOG_LEVEL: {\n        ERROR: \"ERROR\",\n        INFO: \"INFO\"\n    },\n    LOG_SOURCE: {\n        SYSTEM: \"SYSTEM\",\n        PARTNER: \"PARTNER\"\n    },\n    AGENT_STATUS_TYPE: {\n        SALESFORCE_PRESENCE: 'SALESFORCE_PRESENCE',\n        EXTERNAL_PRESENCE: 'EXTERNAL_PRESENCE'\n    }\n};\n\n/**\n * Fields in the connector configuration that are logged. \n */\nexport const CONNECTOR_CONFIG_EXPOSED_FIELDS = [\n    \"/internalNameLabel\",\n    \"/reqGeneralInfo/reqAdapterUrl\",\n    \"/reqGeneralInfo/reqVendorInfoApiName\",\n    \"isACWAllowed\",\n    \"isHVSEnabled\",\n    \"orgDomainName\",\n    \"phoneServiceChannelId\",\n    \"telephonySettingsComponentFqn\"\n];\n\n/**\n * Fields that starts with string in the connector configuration that are logged. \n */\nexport const CONNECTOR_CONFIG_EXPOSED_FIELDS_STARTSWITH = [\n    \"/reqHvcc\"\n];\n","/*\n * Copyright (c) 2021, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: BSD-3-Clause\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * Download data as a file.\n * @param {object} data \n * @param {string} fileName \n * @param {string} fileType\n */\n export function downloadData(data, fileName, fileType) {\n    if(!document || !data) return;\n    \n    const dataStr = (typeof data === 'string') ? data : JSON.stringify(data);\n    const file = new Blob([dataStr], {type: fileType});\n    let a = document.createElement(\"a\") \n    const blobURL = URL.createObjectURL(file);\n    a.download = fileName;\n    a.href = blobURL;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(blobURL);\n}","/*\n * Copyright (c) 2021, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: BSD-3-Clause\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause\n */\n\nimport { downloadData } from './downloadData.js';\nimport constants from './constants';\n\n//The max size of the logs in # of characaters\nconst MAX_LOGS_SIZE = 1.5e7/2; //15 MB or 7.5M characters\n\nconst _strify = obj => (typeof obj === 'string') ? obj : JSON.stringify(obj);\n\nlet LOGS_SIZE = 0;\nlet logs = [];\n\nfunction _log(logLevel, logMessage, logSource) {\n    if(!logMessage) {\n        throw new Error(\"Log Message required\");\n    }\n    logLevel  = logLevel  || constants.LOG_LEVEL.INFO;\n    logSource = logSource || constants.LOG_SOURCE.PARTNER;\n\n    const logStr = [new Date().toISOString(), _strify(logLevel), _strify(logSource), `${_strify(logMessage)}\\n`].join(\"|\");\n    \n    //If logs size is greater than max size, empty it.\n    if(LOGS_SIZE + logStr.length >= MAX_LOGS_SIZE) {\n        logs = []; \n        LOGS_SIZE = 0;\n    }\n    LOGS_SIZE += logStr.length;\n    logs.push(logStr);\n}\n\n/**\n * Log a message at a custom level.\n * @param {object} logMessage\n * @param {string} logLevel \n * @param {string} [logSource]\n */\nexport function log(logMessage, logLevel, logSource) {\n    _log(logLevel, logMessage, logSource);\n}\n\n/**\n * \n * @returns a deep copy of the logs array\n */\nexport function getLogs() {\n    return JSON.parse(JSON.stringify(logs));\n}\n\n/**\n * Download the logs as a file\n */\nexport function downloadLogs() {\n    downloadData(logs.join(''), `log-${new Date().getTime()}.txt`, 'text/plain');\n}\n","/*\n * Copyright (c) 2021, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: BSD-3-Clause\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause\n */\n\n/* eslint-disable no-unused-vars */\nimport constants from './constants.js';\nimport { downloadLogs } from './logger.js';\n\nexport const Constants = {\n    EVENT_TYPE: {\n        LOGIN_RESULT: constants.EVENT_TYPE.LOGIN_RESULT,\n        LOGOUT_RESULT: constants.EVENT_TYPE.LOGOUT_RESULT,\n        CALL_STARTED: constants.EVENT_TYPE.CALL_STARTED,\n        QUEUED_CALL_STARTED: constants.EVENT_TYPE.QUEUED_CALL_STARTED,\n        PREVIEW_CALL_STARTED: constants.EVENT_TYPE.PREVIEW_CALL_STARTED,\n        CALL_CONNECTED: constants.EVENT_TYPE.CALL_CONNECTED,\n        HANGUP: constants.EVENT_TYPE.HANGUP,\n        MUTE_TOGGLE: constants.EVENT_TYPE.MUTE_TOGGLE,\n        HOLD_TOGGLE: constants.EVENT_TYPE.HOLD_TOGGLE,\n        RECORDING_TOGGLE: constants.EVENT_TYPE.RECORDING_TOGGLE,\n        PARTICIPANTS_SWAPPED: constants.EVENT_TYPE.PARTICIPANTS_SWAPPED,\n        PARTICIPANTS_CONFERENCED: constants.EVENT_TYPE.PARTICIPANTS_CONFERENCED,\n        PARTICIPANT_ADDED: constants.EVENT_TYPE.PARTICIPANT_ADDED, \n        PARTICIPANT_CONNECTED: constants.EVENT_TYPE.PARTICIPANT_CONNECTED,\n        PARTICIPANT_REMOVED: constants.EVENT_TYPE.PARTICIPANT_REMOVED,\n        MESSAGE: constants.EVENT_TYPE.MESSAGE,\n        AFTER_CALL_WORK_STARTED: constants.EVENT_TYPE.AFTER_CALL_WORK_STARTED,\n        WRAP_UP_ENDED: constants.EVENT_TYPE.WRAP_UP_ENDED,\n        AGENT_ERROR: constants.EVENT_TYPE.AGENT_ERROR,\n        SOFTPHONE_ERROR: constants.EVENT_TYPE.SOFTPHONE_ERROR,\n        UPDATE_AUDIO_STATS: constants.EVENT_TYPE.UPDATE_AUDIO_STATS,\n        SUPERVISOR_BARGED_IN: constants.EVENT_TYPE.SUPERVISOR_BARGED_IN,\n        SUPERVISOR_CALL_STARTED : constants.EVENT_TYPE.SUPERVISOR_CALL_STARTED,\n        SUPERVISOR_CALL_CONNECTED: constants.EVENT_TYPE.SUPERVISOR_CALL_CONNECTED,\n        SUPERVISOR_HANGUP : constants.EVENT_TYPE.SUPERVISOR_HANGUP,\n        SET_AGENT_STATUS: constants.EVENT_TYPE.SET_AGENT_STATUS,\n        GET_AGENT_STATUS: constants.EVENT_TYPE.GET_AGENT_STATUS\n    },\n    /**\n    * @enum {string}\n    */\n    ERROR_TYPE: {\n        GENERIC_ERROR: constants.ERROR_TYPE.GENERIC_ERROR,\n        INVALID_PARTICIPANT: constants.ERROR_TYPE.INVALID_PARTICIPANT,\n        INVALID_DESTINATION: constants.ERROR_TYPE.INVALID_DESTINATION,\n        INVALID_PARAMS: constants.ERROR_TYPE.INVALID_PARAMS,\n        INVALID_AGENT_STATUS: constants.ERROR_TYPE.INVALID_AGENT_STATUS,\n        CAN_NOT_UPDATE_PHONE_NUMBER: constants.ERROR_TYPE.CAN_NOT_UPDATE_PHONE_NUMBER\n    },\n    /**\n    * @enum {string}\n    */\n    AGENT_STATUS: { ...constants.AGENT_STATUS },\n    /**\n    * @enum {string}\n    */\n    PARTICIPANT_TYPE: { ...constants.PARTICIPANT_TYPE },\n    /**\n    * @enum {string}\n    */\n    CALL_TYPE: { ...constants.CALL_TYPE },\n    /**\n    * @enum {string}\n    */\n    DIALER_TYPE: { ...constants.DIALER_TYPE },\n    /**\n    * @enum {string}\n    */\n    CONTACT_TYPE: { ...constants.CONTACT_TYPE },\n    /**\n    * @enum {string}\n    */\n    CALL_STATE: { ...constants.CALL_STATE },\n    /**\n    * @enum {string}\n    */\n    HANGUP_REASON: { ...constants.HANGUP_REASON },\n    /**\n    * @enum {string}\n    */\n    PHONE_TYPE: { ...constants.PHONE_TYPE },\n    /**\n     * @enum {String}\n     */\n    AGENT_AVAILABILITY: { ...constants.AGENT_AVAILABILITY },\n    /**\n     * @enum (String)\n     */\n     REMOVE_PARTICIPANT_VARIANT: { ...constants.REMOVE_PARTICIPANT_VARIANT },\n    /**\n     * @enum {String}\n     */\n    LOG_LEVEL: { ...constants.LOG_LEVEL },\n    /**\n     * @enum {String}\n     */\n    AgentStatusType: { ...constants.AGENT_STATUS_TYPE }\n};\n\n/**\n * Class representing a Phone type\n */\n export class Phone {\n    /**\n     * Create Phone\n     * @param {object} param\n     * @param {PHONE_TYPE} param.type\n     * @param {string} [param.number]\n     */\n    constructor({ type, number}) {\n        Validator.validateEnum(type, Object.values(constants.PHONE_TYPE));\n        if(number) {\n            Validator.validateString(number);\n        }\n        this.type = type;\n        this.number = number;\n    }\n}\n\n/**\n * Class representing result type for mute() & unmute()\n */\nexport class MuteToggleResult {\n    /**\n     * Create ActiveCallsResult\n     * @param {object} param\n     * @param {boolean} param.isMuted\n     */\n    constructor({ isMuted }) {\n        this.isMuted = isMuted;\n    }\n}\n\n/**\n * Class representing result type for getActiveCalls()\n */\nexport class ActiveCallsResult {\n    /**\n     * Create ActiveCallsResult\n     * @param {object} param\n     * @param {PhoneCall[]} [param.activeCalls]\n     */\n    constructor({ activeCalls = [] }) {\n        if (activeCalls.length > 0) {\n            activeCalls.forEach(activeCall => {\n                Validator.validateClassObject(activeCall, PhoneCall);\n            });\n        }\n        this.activeCalls = activeCalls;\n    }\n}\n/**\n * Class representing result type for getAgentConfig()\n */\nexport class AgentConfigResult {\n    /**\n     * Create AgentConfigResult\n     * @param {object} param\n     * @param {boolean} [param.hasMute]\n     * @param {boolean} [param.hasRecord]\n     * @param {boolean} [param.hasMerge]\n     * @param {boolean} [param.hasSwap]\n     * @param {boolean} [param.hasSignedRecordingUrl]\n     * @param {Phone[]} [param.phones]\n     * @param {Phone} [param.selectedPhone]\n     * @param {boolean} [param.debugEnabled]\n     * @param {boolean} [param.hasContactSearch] True if getPhoneContacts uses the 'contain' filter\n     * @param {boolean} [param.hasAgentAvailability] True if getPhoneContacts also provides agent availability\n     * @param {boolean} [param.supportsMos] True if vendor support MOS\n     * @param {boolean} [param.hasSupervisorListenIn] True if vendor supports supervisor listening  to a ongoing call\n     * @param {boolean} [param.hasSupervisorBargeIn] True if vendor supports Supervisor  barging into a ongoing call\n     */\n    constructor({ hasMute = true, hasRecord = true, hasMerge = true, hasSwap = true, hasSignedRecordingUrl = false, phones = [constants.PHONE_TYPE.SOFT_PHONE], selectedPhone = new Phone({type: constants.PHONE_TYPE.SOFT_PHONE}) , debugEnabled = true, hasContactSearch = false, hasAgentAvailability = false, supportsMos = false, hasSupervisorListenIn = false, hasSupervisorBargeIn = false }) {\n        Validator.validateBoolean(hasMute);\n        Validator.validateBoolean(hasRecord);\n        Validator.validateBoolean(hasMerge);\n        Validator.validateBoolean(hasSwap);\n        Validator.validateBoolean(hasSignedRecordingUrl);\n        Validator.validateClassObject(phones, Array);\n        Validator.validateBoolean(debugEnabled);\n        Validator.validateClassObject(selectedPhone, Phone);\n        Validator.validateBoolean(hasContactSearch);\n        Validator.validateBoolean(hasAgentAvailability);\n        Validator.validateBoolean(supportsMos);\n        Validator.validateBoolean(hasSupervisorListenIn);\n        Validator.validateBoolean(hasSupervisorBargeIn);\n\n        this.hasMute = hasMute;\n        this.hasRecord = hasRecord;\n        this.hasMerge = hasMerge;\n        this.hasSwap = hasSwap;\n        this.hasSignedRecordingUrl = hasSignedRecordingUrl;\n        this.phones = phones;\n        this.selectedPhone = selectedPhone;\n        this.debugEnabled = debugEnabled;\n        this.hasContactSearch = hasContactSearch;\n        this.hasAgentAvailability = hasAgentAvailability;\n        this.supportsMos = supportsMos;\n        this.hasSupervisorListenIn = hasSupervisorListenIn;\n        this.hasSupervisorBargeIn = hasSupervisorBargeIn;\n    }\n}\n\n/**\n * Class representing AgentConfig type for setAgentConfig()\n */\nexport class AgentConfig {\n    /**\n     * Create AgentConfig\n     * @param {object} param\n     * @param {Phone} [param.selectedPhone]\n     */\n    constructor({ selectedPhone }) {\n        Validator.validateClassObject(selectedPhone, Phone);\n        this.selectedPhone = selectedPhone;\n    }\n}\n\n/**\n * Class representing result type for pauseRecording() & resumeRecording\n */\nexport class RecordingToggleResult {\n    /**\n     * Create RecordingToggleResult\n     * @param {object} param\n     * @param {boolean} param.isRecordingPaused\n     * @param {string} [param.contactId]\n     * @param {string} [param.initialContactId]\n     * @param {string} [param.instanceId]\n     * @param {string} [param.region]\n     */\n    constructor({ isRecordingPaused, contactId = null, initialContactId = null, instanceId = null, region = null }) {\n        this.isRecordingPaused = isRecordingPaused;\n        this.contactId = contactId;\n        this.initialContactId = initialContactId;\n        this.instanceId = instanceId;\n        this.region = region;\n    }\n}\n\n/**\n * Class representing result type for addParticipant()\n */\nexport class ParticipantResult {\n    /**\n     * Create ParticipantResult\n     * @param {object} param\n     * @param {boolean} param.initialCallHasEnded\n     * @param {CallInfo} param.callInfo\n     * @param {string} param.phoneNumber\n     * @param {string} param.callId\n     */\n    constructor({ initialCallHasEnded, callInfo, phoneNumber, callId }) {\n        Validator.validateClassObject(callInfo, CallInfo);\n        this.initialCallHasEnded = initialCallHasEnded;\n        this.callInfo = callInfo;\n        this.phoneNumber = phoneNumber;\n        this.callId = callId;\n    }\n}\n\n/**\n * Class representing result type for getPhoneContacts()\n */\nexport class PhoneContactsResult {\n    /**\n     * Create PhoneContactsResult\n     * @param {object} param\n     * @param {Contact[]} [param.contacts]\n     */\n    constructor({ contacts = [] }) {\n        if (contacts.length > 0) {\n            contacts.forEach(contact => {\n                Validator.validateClassObject(contact, Contact);\n            });\n        }\n        this.contacts = contacts;\n    }\n}\n\n/**\n * Class representing result type for accept(), decline(), dial()\n */\nexport class CallResult {\n    /**\n     * Create CallResult\n     * @param {object} param\n     * @param {PhoneCall} [param.call]\n     */\n    constructor({ call }) {\n        if (call !== undefined) {\n            Validator.validateClassObject(call, PhoneCall);\n        }\n        this.call = call;\n    }\n}\n\n/**\n * Class representing result type for endCall(), hangup()\n */\nexport class HangupResult {\n    /**\n     * Create CallResult\n     * @param {object} param\n     * @param {PhoneCall[]|PhoneCall} param.calls - one or more calls (can be multiple calls in case of agent endcall/hangup)\n     */\n    constructor({ calls }) {\n        if (calls instanceof Array) {\n            calls.forEach(call => Validator.validateClassObject(call, PhoneCall));\n            this.calls = calls;\n        } else {\n            Validator.validateClassObject(calls, PhoneCall);\n            this.calls = [calls];\n        }\n    }\n}\n\n/**\n * Class representing result type for hold() & resume()\n */\nexport class HoldToggleResult {\n    /**\n     * Create HoldToggleResult\n     * @param {object} param\n     * @param {boolean} param.isThirdPartyOnHold\n     * @param {boolean} param.isCustomerOnHold\n     * @param {PhoneCall[]} [param.calls]\n     */\n    constructor({ isThirdPartyOnHold, isCustomerOnHold, calls }) {\n        if (calls) {\n            Object.values(calls).forEach(call => {\n                Validator.validateClassObject(call, PhoneCall);\n            });\n            this.calls = calls;\n        }\n        this.isThirdPartyOnHold = isThirdPartyOnHold;\n        this.isCustomerOnHold = isCustomerOnHold;\n    }\n}\n\n/**\n * Class representing result type for getRecordingUrl\n */\n export class SignedRecordingUrlResult {\n    /**\n     * Create SignedRecordingUrlResult\n     * @param {object} param\n     * @param {boolean} param.success\n     * @param {string} [param.url]\n     * @param {number} [param.duration] in seconds\n     * @param {string} [param.callId] Salesforce callId of the voice call\n     */\n    constructor({ success, url, duration, callId }) {\n        if (success) {\n            // For a successfull result, url is required\n            Validator.validateString(url);\n            Validator.validateString(callId);\n            if (duration) {\n                Validator.validateNumber(duration);\n            }\n        }\n        this.success = success;\n        this.url = url;\n        this.duration = duration;\n        this.callId = callId;\n    }\n}\n\n/**\n * Class representing result type for init()\n */\nexport class InitResult {\n    /**\n     * Create InitResult\n     * @param {object} param\n     * @param {boolean} [param.showLogin]\n     * @param {number} [param.loginFrameHeight]\n     */\n    constructor({ showLogin = false, loginFrameHeight = 350 }) {\n        this.showLogin = showLogin;\n        this.loginFrameHeight = loginFrameHeight;\n    }\n}\n\n/**\n * Class representing generic result type\n */\nexport class GenericResult {\n    /**\n     * Create GenericResult\n     * @param {object} param\n     * @param {boolean} param.success\n     */\n    constructor({ success }) {\n        this.success = success;\n    }\n}\n\n/**\n * Class representing logout result type\n */\n export class LogoutResult {\n    /**\n     * Create LogoutResult\n     * @param {object} param\n     * @param {boolean} param.success\n     * @param {number} [param.loginFrameHeight]\n     */\n    constructor({ success, loginFrameHeight = 350 }) {\n        this.success = success;\n        this.loginFrameHeight = loginFrameHeight;\n    }\n}\n\n/**\n * Class representing callInfo class (call metadata)\n */\nexport class CallInfo {\n    /**\n     * Create CallInfo\n     * @param {object} param\n     * @param {boolean} param.isOnHold\n     * @param {boolean} param.isRecordingPaused\n     * @param {boolean} param.isMuted\n     * @param {string} [param.initialCallId]\n     * @param {Date} [param.callStateTimestamp]\n     * @param {boolean} [param.isSoftphoneCall] - is it a softphone call \n     * @param {boolean} [param.acceptEnabled]\n     * @param {boolean} [param.declineEnabled]\n     * @param {boolean} [param.muteEnabled]\n     * @param {boolean} [param.swapEnabled]\n     * @param {boolean} [param.conferenceEnabled]\n     * @param {boolean} [param.holdEnabled]\n     * @param {boolean} [param.recordEnabled]\n     * @param {boolean} [param.addCallerEnabled]\n     * @param {boolean} [param.extensionEnabled]\n     * @param {boolean} [param.isReplayable]\n     * @param {boolean} [param.isBargeable]\n     * @param {boolean} [param.isExternalTransfer]\n     * @param {(\"ALWAYS\"|\"NEVER\"|\"ALWAYS_EXCEPT_ON_HOLD\")} [param.removeParticipantVariant] - The type of remove participant variant when in a transfer call. \n     */\n    constructor({ callStateTimestamp = null, isOnHold, isMuted = false, isRecordingPaused = false, initialCallId, isSoftphoneCall = true, \n        acceptEnabled = true, declineEnabled = true, muteEnabled = true, swapEnabled = true, conferenceEnabled = true, holdEnabled = true,\n        recordEnabled = true, addCallerEnabled = true, extensionEnabled = true, isReplayable = true, isBargeable = false, isExternalTransfer, \n        removeParticipantVariant = Constants.REMOVE_PARTICIPANT_VARIANT.ALWAYS }) {\n        if (callStateTimestamp) {\n            Validator.validateDate(callStateTimestamp);\n        }\n        Validator.validateBoolean(isRecordingPaused);\n        Validator.validateBoolean(isMuted);\n        Validator.validateBoolean(isSoftphoneCall);\n        Validator.validateBoolean(acceptEnabled);\n        Validator.validateBoolean(declineEnabled);\n        Validator.validateBoolean(muteEnabled);\n        Validator.validateBoolean(swapEnabled);\n        Validator.validateBoolean(conferenceEnabled);\n        Validator.validateBoolean(holdEnabled);\n        Validator.validateBoolean(recordEnabled);\n        Validator.validateBoolean(addCallerEnabled);\n        Validator.validateBoolean(extensionEnabled);\n        Validator.validateBoolean(isBargeable);\n        if (isExternalTransfer !== undefined) {\n            Validator.validateBoolean(isExternalTransfer);\n        }\n        Validator.validateEnum(removeParticipantVariant, Object.values(constants.REMOVE_PARTICIPANT_VARIANT));\n        this.callStateTimestamp = callStateTimestamp;\n        this.isRecordingPaused = isRecordingPaused;\n        this.isMuted = isMuted;\n        this.isOnHold = isOnHold;\n        this.initialCallId = initialCallId;\n        this.isSoftphoneCall = isSoftphoneCall;\n        this.acceptEnabled = acceptEnabled;\n        this.declineEnabled = declineEnabled;\n        this.muteEnabled = muteEnabled;\n        this.swapEnabled = swapEnabled;\n        this.conferenceEnabled = conferenceEnabled;\n        this.holdEnabled = holdEnabled;\n        this.recordEnabled = recordEnabled;\n        this.addCallerEnabled = addCallerEnabled;\n        this.extensionEnabled = extensionEnabled;\n        this.isReplayable = isReplayable;\n        this.isBargeable = isBargeable;\n        this.isExternalTransfer = isExternalTransfer;\n        this.removeParticipantVariant = removeParticipantVariant;\n    }\n}\n\n/** \n * Class representing a Contact. This object is used to represent \n * phone system contact or any call target\n */\n\nexport class Contact {\n    /**\n     * Create a Contact.\n     * @param {object} param\n     * @param {string} [param.id] - The unique contactId\n     * @param {(\"PhoneBook\"|\"Queue\"|\"PhoneNumber\"|\"Agent\")} [param.type] - The type of the contact, one of the CONTACT_TYPE values\n     * @param {string} [param.name] - The label for this contact to be displayed in the UI\n     * @param {string} [param.phoneNumber] - The phone number associcated with this contact\n     * @param {string} [param.prefix] - Any prefix to be dialed before dialing the number (i.e. +1)\n     * @param {string} [param.extension] - Any extension to be dialed after dialing the number\n     * @param {string} [param.endpointARN]\n     * @param {string} [param.queue]\n     * @param {string} [param.availability]\n     */\n    constructor({phoneNumber, id, type, name, prefix, extension, endpointARN, queue, availability}) {\n        if (phoneNumber) {\n            Validator.validateString(phoneNumber);\n        }\n        if (type) {\n            Validator.validateEnum(type, Object.values(constants.CONTACT_TYPE));\n        }\n        if (id) {\n            Validator.validateString(id);\n        }\n        if (name) {\n            Validator.validateString(name);\n        }\n        if (prefix) {\n            Validator.validateString(prefix);\n        }\n        if (extension) {\n            Validator.validateString(extension);\n        }\n        if (availability) {\n            Validator.validateEnum(availability, Object.values(constants.AGENT_AVAILABILITY));\n        }\n\n        this.phoneNumber = phoneNumber;\n        this.id = id;\n        this.type = type;\n        this.name = name;\n        this.prefix = prefix;\n        this.extension = extension;\n        this.endpointARN = endpointARN;\n        this.queue = queue;\n        if (constants.CONTACT_TYPE.AGENT === this.type) {\n            this.availability = availability;\n        } else {\n            this.availability = null;\n        }\n        \n    }\n}\n\n/** \n* Class representing PhoneCallAttributes\n*/\n\nexport class PhoneCallAttributes {\n    /**\n     * Create PhoneCallAttributes.\n     * @param {object} param\n     * @param {string} [param.voiceCallId] - The voice call id\n     * @param {PARTICIPANT_TYPE} [param.participantType] - The participant type of the call\n     * @param {DIALER_TYPE} [param.dialerType] - The dialer type of the call\n     * @param {string} [param.parentId] - The parent call id of the call\n     * @param {boolean} [param.isOnHold]\n     */\n    constructor({ voiceCallId, participantType, dialerType = Constants.DIALER_TYPE.NONE, parentId, isOnHold }) {\n        if (voiceCallId) {\n            Validator.validateString(voiceCallId);\n        }\n        if (participantType) {\n            Validator.validateEnum(participantType, Object.values(constants.PARTICIPANT_TYPE));\n        }\n        if (parentId) {\n            Validator.validateString(parentId);\n        }\n        if (isOnHold !== undefined) {\n            Validator.validateBoolean(isOnHold);\n        }\n        Validator.validateEnum(dialerType, Object.values(constants.DIALER_TYPE));\n\n        this.voiceCallId = voiceCallId;\n        this.participantType = participantType;\n        this.parentId = parentId;\n        this.isOnHold = isOnHold;\n        this.dialerType = dialerType;\n    }\n}\n\n/** \n* Class representing a PhoneCall. \n*/\n\nexport class PhoneCall {\n    /**\n     * Create a PhoneCall.\n     * @param {object} param\n     * @param {string} [param.callId] - The unique callId. This is a required parameter\n     * @param {CALL_TYPE} [param.callType] - The type of the call, one of the CALL_TYPE values\n     * @param {Contact} [param.contact] - The Call Target / Contact \n     * @param {string} [param.state] - The state of the call, i.e. ringing, connected, declined, failed \n     * @param {PhoneCallAttributes} [param.callAttributes] - Any additional call attributes\n     * @param {string} [param.phoneNumber] - The phone number associated with this call (usually external number)\n     * @param {CallInfo} [param.callInfo]\n     * @param {string} [param.reason]\n     * @param {boolean} [param.closeCallOnError]\n     * @param {string} [param.agentStatus]\n     */\n    constructor({callId, callType, contact, state, callAttributes, phoneNumber, callInfo, reason, closeCallOnError, agentStatus }) {\n        // TODO: Revisit the required fields\n        if (callId) {\n            Validator.validateString(callId);\n            this.callId = callId;\n        }\n        if (callType) {\n            Validator.validateEnum(callType, Object.values(constants.CALL_TYPE));\n            this.callType = callType;\n        }\n        if (phoneNumber) {\n            Validator.validateString(phoneNumber);\n            this.phoneNumber = phoneNumber;\n        }\n        if (callInfo) {\n            Validator.validateClassObject(callInfo, CallInfo);\n            this.callInfo = callInfo;\n        }\n        if (contact) {\n            Validator.validateClassObject(contact, Contact);\n            this.contact = contact;\n        }\n        if (reason) {\n            this.reason = reason;\n        }\n        if (closeCallOnError) {\n            this.closeCallOnError = closeCallOnError;\n        }\n        if (agentStatus) {\n            this.agentStatus = agentStatus;\n        }\n        this.state = state;\n        this.callAttributes = callAttributes;\n    }\n}\n\n/** \n* Class representing a VendorConnector\n*/\nexport class VendorConnector {\n    /**\n     * Initialize the connector\n     * @param {object} connectorConfig\n     * @returns {Promise<InitResult>} \n     * \n     */\n    init(config) {\n        throw new Error('Not implemented');\n    }\n\n    /**\n     * Get the currently active calls\n     * @returns {Promise<ActiveCallsResult>} \n     * \n     */\n    getActiveCalls() {\n        throw new Error('Not implemented');\n    }\n\n    /**\n     * Accept call\n     * @param {PhoneCall} call - The call to be accepted\n     * @returns {Promise<CallResult>} \n     * \n     */\n    acceptCall(call) {\n        throw new Error('Not implemented');\n    }\n\n    /**\n     * Decline call\n     * @param {PhoneCall} call - The call to be declined\n     * @returns {Promise<CallResult>} \n     * \n     */\n    declineCall(call) {\n        throw new Error('Not implemented');\n    }\n\n    /**\n     * End call\n     * @param {PhoneCall} call - The call to be ended\n     * @param {AGENT_STATUS} agentStatus\n     * @returns {Promise<HangupResult>} \n     * \n     */\n    endCall(call, agentStatus) {\n        throw new Error('Not implemented');\n    }\n\n    /**\n     * Mute call\n     * @returns {Promise<MuteToggleResult>} \n     * \n     */\n    mute() {\n        throw new Error('Not implemented');\n    }\n\n    /**\n     * Unmute call\n     * @returns {Promise<MuteToggleResult>} \n     * \n     */\n    unmute() {\n        throw new Error('Not implemented');\n    }\n\n    /**\n     * Hold call\n     * @param {PhoneCall} call - The call to be held\n     * @returns {Promise<HoldToggleResult>} \n     * \n     */\n    hold(call) {\n        throw new Error('Not implemented');\n    }\n\n    /**\n     * Resume call\n     * @param {PhoneCall} call - The call to be resumed\n     * @returns {Promise<HoldToggleResult>} \n     * \n     */\n    resume(call) {\n        throw new Error('Not implemented');\n    }\n\n    /**\n     * Set agent status\n     * @param {string} agentStatus\n     * @param {StatusInfo} statusInfo\n     * @returns {Promise<GenericResult>} \n     * \n     */\n    setAgentStatus(agentStatus, statusInfo) {\n        throw new Error('Not implemented');\n    }\n\n    /**\n     * Get agent status\n     * @returns {Promise<AgentStatusInfo>} \n     * \n     */\n     getAgentStatus() {\n        this.logMessageToVendor(constants.LOG_LEVEL.INFO, 'getAgentStatus API is NOT Implemented' );\n    }\n\n    /**\n     * Dial out Number\n     * @param {Contact} contact\n     * @returns {Promise<CallResult>} \n     * \n     */\n    dial(contact) {\n        throw new Error('Not implemented');\n    }\n\n    /**\n     * Send digits\n     * @param {string} digits\n     */\n    sendDigits(digits) {\n        throw new Error('Not implemented');\n    }\n\n    /**\n     * Get phone contacts\n     * @returns {Promise<PhoneContactsResult>} \n     */\n    getPhoneContacts() {\n        throw new Error('Not implemented');\n    }\n\n    /**\n     * Swap calls\n     * @param {PhoneCall} call1\n     * @param {PhoneCall} call2\n     * @returns {Promise<HoldToggleResult>} \n     */\n    swap(call1, call2) {\n        throw new Error('Not implemented');\n    }\n\n    /**\n     * Conference calls\n     * @param {PhoneCall[]} calls\n     * @returns {Promise<HoldToggleResult>} \n     */\n    conference(calls) {\n        throw new Error('Not implemented');\n    }\n\n    /**\n     * Add participant to call\n     * @param {Contact} contact\n     * @param {PhoneCall} call\n     * @returns {Promise<ParticipantResult>} \n     */\n    addParticipant(contact, call) {\n        throw new Error('Not implemented');\n    }\n\n    /**\n     * Pause recording\n     * @param {PhoneCall} call\n     * @returns {Promise<RecordingToggleResult>} \n     */\n    pauseRecording(call) {\n        throw new Error('Not implemented');\n    }\n\n    /**\n     * Resume recording\n     * @param {PhoneCall} call\n     * @returns {Promise<RecordingToggleResult>} \n     */\n    resumeRecording(call) {\n        throw new Error('Not implemented');\n    }\n\n    /**\n     * Get agentConfig\n     * @returns {Promise<AgentConfigResult>}\n     */\n    getAgentConfig() {\n        throw new Error('Not implemented');\n    }\n\n    /**\n     * Set Agent Config\n     * @param {AgentConfig} config\n     * @returns {Promise<GenericResult>}\n     */\n    setAgentConfig(config) {\n        throw new Error('Not implemented');\n    }\n\n    /**\n     * Logout from Omni\n     * @returns {Promise<LogoutResult>} \n     */\n    logout() {\n        throw new Error('Not implemented');\n    }\n\n    /**\n     * Handle message from LWC/Aura component\n     * @param {object} message\n     */\n    handleMessage(message) {\n        throw new Error('Not implemented');\n    }\n\n    /**\n     * Wrap up call\n     * @param {PhoneCall} call\n     */\n    wrapUpCall(call) {\n        throw new Error('Not implemented');\n    }\n\n    /**\n    * Get the signed recording url\n    * @param {String} recordingUrl\n    * @param {String} vendorCallKey\n    * @param {String} callId\n    * @returns {Promise<SignedRecordingUrlResult>} \n    */\n    getSignedRecordingUrl(recordingUrl, vendorCallKey, callId) {\n        throw new Error('Not implemented');\n    }\n\n    /**\n     * Triggers a browser download for Vendor Logs\n     */\n    downloadLogs() {\n        downloadLogs();\n    }\n\n    /**\n     * Sends the logs with a logLevel and payload to the vendor connector.\n     * Does a no-op, if not implemented.\n     * @param {String} logLevel Log Level (INFO, WARN, ERROR)\n     * @param {String} message Message to be logged\n     * @param {Object} payload An optional payload to be logged\n     */\n    logMessageToVendor(logLevel, message, payload) {}\n\n    /**\n     * Supervise a call\n     * @param {PhoneCall} call Call to be supervised\n     */\n     superviseCall(call) {\n        throw new Error('Not implemented');\n    }\n\n    /**\n     * Supervisor disconnects from a call\n     * @param {PhoneCall} call Call to be disconnected\n     */\n    supervisorDisconnect(call) {\n        throw new Error('Not implemented');\n    }\n\n    /**\n     * Supervisor Barges into a ongoing call\n     * @param {PhoneCall} call Call which supervisor barges in\n     */\n    supervisorBargeIn(call) {\n        throw new Error('Not implemented');\n    }\n}\n\nexport class Validator {\n    static validateString(value) {\n        if (typeof value !== 'string') {\n            throw new Error(`Invalid argument. Expecting a string but got ${typeof value}`);\n        }\n        return this;\n    }\n\n    static validateNumber(value) {\n        if (typeof value !== 'number') {\n            throw new Error(`Invalid argument. Expecting a number but got ${typeof value}`);\n        }\n        return this;\n    }\n\n    static validateBoolean(value) {\n        if (typeof value !== 'boolean') {\n            throw new Error(`Invalid argument. Expecting a boolean but got ${typeof value}`);\n        }\n        return this;\n    }\n\n    static validateEnum(value, enumValues) {\n        const regex = new RegExp(enumValues.join( \"|\" ), \"i\");\n        if (!regex.test(value)) {\n            throw new Error(`Invalid argument. Expecting a value from ${JSON.stringify(enumValues)} but got ${value}`);\n        }\n        return this;\n    }\n\n    static validateDate(value) {\n        if (!(value instanceof Date)) {\n            throw new Error(`Invalid argument. Expecting a Date object but got ${typeof value}`);\n        }\n        return this;\n    }\n\n    static validateClassObject(object, className) {\n        if (!(object instanceof className)) {\n            throw new Error(`Invalid className. Expecting object of class ${className} but got ${typeof object}`);\n        }\n        return this;\n    }\n}\n\n/** \n * Class representing an Agent status information. This object is used to represent \n * agent status information\n */\n\nexport class AgentStatusInfo {\n    /**\n     * Create a AgentStatusInfo.\n     * @param {object} param\n     * @param {enum} [param.statusType] - Salesforce Presence (Default) or External Presence\n     * @param {string} [param.statusId] - The unique statusId (required)\n     * @param {string} [param.statusApiName] - The status API name\n     * @param {string} [param.statusName] - The label for this status to be displayed in the UI\n     */\n    constructor({statusType = constants.AGENT_STATUS_TYPE.SALESFORCE_PRESENCE, statusId, statusApiName, statusName}) {\n        Validator.validateString(statusId);\n        Validator.validateEnum(statusType, Object.values(constants.AGENT_STATUS_TYPE));\n        if (statusApiName) {\n            Validator.validateString(statusApiName);\n        }\n        if (statusName) {\n            Validator.validateString(statusName);\n        }\n        this.statusId = statusId;\n        this.statusApiName = statusApiName;\n        this.statusName = statusName;\n        this.statusType = statusType;\n    }\n}\n\n/** \n * Class representing a Supervised Call Info. This object is used to represent \n * information about a call that is being supervised by a supervisor.\n */\nexport class SupervisedCallInfo {\n    /**\n     * Create a AgentStatusInfo.\n     * @param {object} param\n     * @param {string} [param.callId] - The unique supervised vendor call ID (required)\n     * @param {string} [param.voiceCallId] - The supervised salesforce voice call ID\n     * @param {string} [param.callType] - The type of the call, one of the CALL_TYPE values\n     * @param {string} [param.from] - From phone number (for Inbound calls)\n     * @param {string} [param.to] - To phone number (for Outbound calls)\n     * @param {string} [param.supervisorName] - The supervisor name (shown to the supervised agent on barge in)\n     * @param {boolean} [param.isBargedIn] - True if the Supervisor has barged in, False if the supervisor is listening in.\n     */\n\n    constructor({callId, voiceCallId, callType, from, to, supervisorName, isBargedIn}) {\n        Validator.validateString(callId);\n        this.callId = callId;\n        this.voiceCallId = voiceCallId;\n        this.callType = callType;\n        this.from = from;\n        this.to = to;\n        this.supervisorName = supervisorName;\n        this.isBargedIn = isBargedIn;\n    }\n}\n\n/**\n * Class representing a Audio Stats, which contains array of AudioStats. This object is used to calculate the MOS Score\n */\n\nexport class AudioStats {\n    /**\n     * Create a AudioStats\n     * @param {object} param\n     * @param {string} [param.callId] - The unique callId.\n     * @param {AudioStatsElement[]} param.stats - array of AudioStatsElement\n     * @param {boolean} [param.isAudioStatsCompleted] - True if the audio stats is completed, will calculate MOS and update VoiceCall record\n     */\n    constructor({ callId, stats, isAudioStatsCompleted }) {\n        if (callId) {\n            Validator.validateString(callId);\n            this.callId = callId;\n        }\n\n        if (stats) {\n            Validator.validateClassObject(stats, Array);\n            stats.forEach(audioStatsElement => Validator.validateClassObject(audioStatsElement, AudioStatsElement));\n            this.stats = stats;\n        }\n\n        if (isAudioStatsCompleted) {\n            Validator.validateBoolean(isAudioStatsCompleted);\n            this.isAudioStatsCompleted = isAudioStatsCompleted;\n        }\n    }\n}\n\n/**\n * Class representing a Audio Stats Element. This object is used to calculate the MOS Score\n */\n\nexport class AudioStatsElement {\n    /**\n     * Create a AudioStatsElement\n     * @param {object} param\n     * @param {StatsInfo} [param.inputChannelStats] - the inputChannel stream stats\n     * @param {StatsInfo} [param.outputChannelStats] - the ouputChannel stream stats\n     */\n    constructor({inputChannelStats, outputChannelStats}) {\n        if (inputChannelStats) {\n            Validator.validateClassObject(inputChannelStats, StatsInfo);\n        }\n        if (outputChannelStats) {\n            Validator.validateClassObject(outputChannelStats, StatsInfo);\n        }\n        \n        this.inputChannelStats = inputChannelStats;\n        this.outputChannelStats = outputChannelStats;\n    }\n}\n\n/**\n * Class representing a Stream Stats. This object is used to calculate the MOS Score\n */\n\nexport class StatsInfo {\n    /**\n     * Create a StatsInfo\n     * @param {object} param\n     * @param {number} [param.packetsCount] - the packets count\n     * @param {number} [param.packetsLost] - packets lost count\n     * @param {number} [param.jitterBufferMillis] - jitter buffer in milliseconds\n     * @param {number} [param.roundTripTimeMillis] - round trip time in milliseconds\n     */\n    constructor({packetsCount, packetsLost, jitterBufferMillis, roundTripTimeMillis}) {\n        packetsCount = (packetsCount == null || packetsCount < 0) ? 0 : packetsCount;\n        packetsLost = (packetsLost == null || packetsLost < 0) ? 0 : packetsLost;\n        jitterBufferMillis = (jitterBufferMillis == null || jitterBufferMillis < 0) ? 0 : jitterBufferMillis;\n        roundTripTimeMillis = (roundTripTimeMillis == null || roundTripTimeMillis < 0) ? 0 : roundTripTimeMillis;\n\n        this.statsCount = 0;\n        this.packetsCount = packetsCount;\n        this.packetsLost = packetsLost;\n        this.jitterBufferMillis = jitterBufferMillis;\n        this.roundTripTimeMillis = roundTripTimeMillis;\n    }\n}\n\n/**\n * Class representing supervise call result\n */\n export class  SuperviseCallResult {\n    /**\n     * Create a SuperviseCallResult\n     * @param {object} param\n     * @param {PhoneCall} param.call\n     */\n    constructor({call}) {\n        Validator.validateClassObject(call, PhoneCall);\n        this.call = call;\n    }\n}\n\n/**\n * Class representing result type for supervisorDisconnected()\n */\n export class SupervisorHangupResult extends HangupResult {\n     /**\n     * Create SupervisorHangupResult\n     * @param {object} param\n     * @param {PhoneCall[]|PhoneCall} param.calls - one or more calls when supervisor hangsup\n     */\n    constructor({ calls }) {\n        super({ calls });\n    }\n }","/*\n * Copyright (c) 2021, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: BSD-3-Clause\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause\n */\nimport { AudioStatsElement, StatsInfo } from './types';\nlet audioStatus;\nlet supportsMos = false;\n\nfunction getAvgStats(streamType) {\n    const stats = audioStatus[streamType];\n    return {\n        packetsCount: stats.packetsCount / stats.statsCount,\n        packetsLost: stats.packetsLost / stats.statsCount,\n        jitterBufferMillis: stats.jitterBufferMillis / stats.statsCount,\n        roundTripTimeMillis: stats.roundTripTimeMillis / stats.statsCount\n    };\n}\n\nfunction getMOSByStream(streamType) {\n    const avgStats = getAvgStats(streamType);\n    const effectiveLatency = avgStats.roundTripTimeMillis + (avgStats.jitterBufferMillis * 2) + 10.0;\n    let R = 0;\n    if (effectiveLatency < 160) {\n        R = 93.2 - (effectiveLatency / 40);\n    } else {\n        R = 93.2 - (effectiveLatency - 120) / 10;\n    }\n    R -= avgStats.packetsLost / avgStats.packetsCount * 2.50;\n    return 1 + (0.035) * R + (.000007) * R * (R - 60) * (100 - R);\n}\n\nexport function enableMos() {\n    supportsMos = true;\n}\n\nexport function getMOS() {\n    if (!supportsMos || !audioStatus) {\n        return undefined;\n    }\n    const inputChannelMOS = getMOSByStream('inputChannelStats');\n    const ouputChannelMOS = getMOSByStream('outputChannelStats');\n    audioStatus = null;\n    if (isNaN(ouputChannelMOS) && isNaN(inputChannelMOS)) {\n        return 0;\n    } else if (isNaN(ouputChannelMOS)) {\n        return inputChannelMOS;\n    } else if (isNaN(inputChannelMOS)) {\n        return ouputChannelMOS;\n    } else {\n        return Math.min(inputChannelMOS, ouputChannelMOS);\n    }\n}\n\nexport function initAudioStats() {\n    audioStatus = new AudioStatsElement({inputChannelStats: new StatsInfo({packetsCount: 0, packetsLost: 0, jitterBufferMillis: 0, roundTripTimeMillis: 0}), \n                               outputChannelStats: new StatsInfo({packetsCount: 0, packetsLost: 0, jitterBufferMillis: 0, roundTripTimeMillis: 0})});\n}\n\nexport function updateAudioStats(statsArray) {\n    if (audioStatus) {\n        statsArray.forEach((stats) => {\n            if (stats.inputChannelStats) {\n                audioStatus.inputChannelStats.statsCount++;\n                audioStatus.inputChannelStats.packetsCount += stats.inputChannelStats.packetsCount | 0;\n                audioStatus.inputChannelStats.packetsLost += stats.inputChannelStats.packetsLost | 0;\n                audioStatus.inputChannelStats.jitterBufferMillis += stats.inputChannelStats.jitterBufferMillis | 0;\n                audioStatus.inputChannelStats.roundTripTimeMillis += stats.inputChannelStats.roundTripTimeMillis | 0;\n            }\n            if (stats.outputChannelStats) {\n                audioStatus.outputChannelStats.statsCount++;\n                audioStatus.outputChannelStats.packetsCount += stats.outputChannelStats.packetsCount | 0;\n                audioStatus.outputChannelStats.packetsLost += stats.outputChannelStats.packetsLost | 0;\n                audioStatus.outputChannelStats.jitterBufferMillis += stats.outputChannelStats.jitterBufferMillis | 0;\n                audioStatus.outputChannelStats.roundTripTimeMillis += stats.outputChannelStats.roundTripTimeMillis | 0;\n            }\n        });\n    }\n}","/*\n * Copyright (c) 2021, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: BSD-3-Clause\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause\n */\n\n/* eslint-disable no-unused-vars */\nimport constants from './constants.js';\nimport { CONNECTOR_CONFIG_EXPOSED_FIELDS, CONNECTOR_CONFIG_EXPOSED_FIELDS_STARTSWITH } from './constants.js';\nimport { Validator, GenericResult, InitResult, CallResult, HangupResult, HoldToggleResult, PhoneContactsResult, MuteToggleResult,\n    ParticipantResult, RecordingToggleResult, AgentConfigResult, ActiveCallsResult, SignedRecordingUrlResult, LogoutResult,\n    VendorConnector, Contact, AudioStats, SuperviseCallResult, SupervisorHangupResult, AgentStatusInfo, SupervisedCallInfo} from './types';\nimport { enableMos, getMOS, initAudioStats, updateAudioStats } from './mosUtil';\nimport { log } from './logger';\n\nlet channelPort;\nlet vendorConnector;\nlet agentAvailable;\nlet isSupervisorConnected;\n\n/**\n * Gets the error type from the error object\n * @param {object} e Error object representing the error\n */\nfunction getErrorType(e) {\n    return e && e.type ? e.type : e;\n}\n\n/**\n * Sanitizes the object by removing any PII data\n * @param {object} payload\n */\nfunction sanitizePayload(payload) {\n    if (payload) {\n        if (typeof (payload) === 'function') {\n            // remove functions from the payload, because they cannot be copied by the postMessage function\n            return;\n        } else if (typeof (payload) === 'object') {\n            const isArray = Array.isArray(payload);\n            const sanitizedPayload = isArray ? [] : {};\n\n            if (isArray) {\n                payload.forEach(element => {\n                    sanitizedPayload.push(sanitizePayload(element));\n                });\n            } else {\n                for (const property in payload) {\n                    if (property !== 'phoneNumber' &&\n                        property !== 'number' &&\n                        property !== 'name' &&\n                        property !== 'callAttributes') {\n                        sanitizedPayload[property] = sanitizePayload(payload[property]);\n                    }\n                }\n            }\n            return sanitizedPayload;\n        }\n    }\n    return payload;\n}\n\n/**\n * Gets the error message from the error object\n * @param {object} e Error object representing the error\n */\nfunction getErrorMessage(e) {\n    return e && e.message ? e.message : e;\n}\n/** \n * Dispatch a telephony event log to Salesforce\n * @param {String} eventType event type, i.e. constants.EVENT_TYPE.CALL_STARTED    \n * @param {Object} payload event payload\n * @param {Boolean} isError error scenario\n */\nfunction dispatchEventLog(eventType, payload, isError) {\n    const sanitizedPayload = sanitizePayload(payload);\n    const logLevel = isError ? constants.LOG_LEVEL.ERROR : constants.LOG_LEVEL.INFO;\n    log({eventType, payload}, logLevel, constants.LOG_SOURCE.SYSTEM);\n    \n    channelPort.postMessage({\n        type: constants.MESSAGE_TYPE.LOG,\n        payload: { eventType, payload: sanitizedPayload, isError }\n    });\n}\n/** \n * Dispatch a telephony event to Salesforce\n * @param {String} eventType event type, i.e. constants.EVENT_TYPE.CALL_STARTED\n * @param {Object} payload event payload\n * @param {Boolean} registerLog optional argument to not register the event\n */\nfunction dispatchEvent(eventType, payload, registerLog = true) {\n    channelPort.postMessage({\n        type: constants.MESSAGE_TYPE.TELEPHONY_EVENT_DISPATCHED,\n        payload: { telephonyEventType: eventType, telephonyEventPayload: payload }\n    });\n    if (registerLog) {\n        dispatchEventLog(eventType, payload, false);\n    }\n}\n\n/**\n * Dispatch a telephony integration error to Salesforce\n * @param {string} errorType Error Type, ex: constants.ErrorType.MICROPHONE_NOT_SHARED\n * @param {object} error Error object representing the error\n * @param {string} eventType The event that caused this error, ex: constants.MESSAGE_TYPE.ACCEPT_CALL\n */\n function dispatchError(errorType, error, eventType) {\n    // eslint-disable-next-line no-console\n    console.error(`SCV dispatched error ${errorType} for eventType ${eventType}`, error);\n    dispatchEvent(constants.EVENT_TYPE.ERROR, { message: constants.ERROR_TYPE[errorType] }, false);\n    dispatchEventLog(eventType, { errorType, error }, true);\n}\n\n/** \n * Notify Salesforce that the connector is ready\n */\nasync function setConnectorReady() {\n    try {\n        const agentConfigResult = await vendorConnector.getAgentConfig();\n        Validator.validateClassObject(agentConfigResult, AgentConfigResult);\n        if (agentConfigResult.supportsMos) {\n            enableMos();\n        }\n        const activeCallsResult = await vendorConnector.getActiveCalls();\n        Validator.validateClassObject(activeCallsResult, ActiveCallsResult);\n        const activeCalls = activeCallsResult.activeCalls;\n        const type = constants.MESSAGE_TYPE.CONNECTOR_READY;\n        const payload = {\n            agentConfig: {\n                [constants.AGENT_CONFIG_TYPE.MUTE] : agentConfigResult.hasMute,\n                [constants.AGENT_CONFIG_TYPE.RECORD] : agentConfigResult.hasRecord,\n                [constants.AGENT_CONFIG_TYPE.MERGE] : agentConfigResult.hasMerge,\n                [constants.AGENT_CONFIG_TYPE.SWAP] : agentConfigResult.hasSwap,\n                [constants.AGENT_CONFIG_TYPE.PHONES] : agentConfigResult.phones,\n                [constants.AGENT_CONFIG_TYPE.SIGNED_RECORDING_URL] : agentConfigResult.hasSignedRecordingUrl,\n                [constants.AGENT_CONFIG_TYPE.SELECTED_PHONE] : agentConfigResult.selectedPhone,\n                [constants.AGENT_CONFIG_TYPE.DEBUG_ENABLED] : agentConfigResult.debugEnabled,\n                [constants.AGENT_CONFIG_TYPE.CONTACT_SEARCH] : agentConfigResult.hasContactSearch,\n                [constants.AGENT_CONFIG_TYPE.VENDOR_PROVIDED_AVAILABILITY] : agentConfigResult.hasAgentAvailability,\n                [constants.AGENT_CONFIG_TYPE.SUPERVISOR_LISTEN_IN] : agentConfigResult.hasSupervisorListenIn,\n                [constants.AGENT_CONFIG_TYPE.SUPERVISOR_BARGE_IN] : agentConfigResult.hasSupervisorBargeIn,\n                [constants.AGENT_CONFIG_TYPE.MOS] : agentConfigResult.supportsMos\n            },\n            callInProgress: activeCalls.length > 0 ? activeCalls[0] : null\n        }\n        channelPort.postMessage({\n            type,\n            payload\n        });\n        dispatchEventLog(type, payload, false);\n    } catch (e) {\n        // Post CONNECTOR_READY even if getAgentConfig is not implemented\n        channelPort.postMessage({\n            type: constants.MESSAGE_TYPE.CONNECTOR_READY,\n            payload: {}\n        });\n        dispatchEventLog(constants.MESSAGE_TYPE.CONNECTOR_READY, {}, false);\n    }\n}\n\n//TODO: 230 we should convert call object to PhoneCall object\nasync function channelMessageHandler(message) { \n    const eventType = message.data.type;\n    if (eventType !== constants.MESSAGE_TYPE.LOG) {\n        dispatchEventLog(eventType, message.data, false);\n    }\n    switch (eventType) {\n        case constants.MESSAGE_TYPE.ACCEPT_CALL:\n            try {\n                if (message.data.call && message.data.call.callType &&\n                    message.data.call.callType.toLowerCase() === constants.CALL_TYPE.OUTBOUND.toLowerCase()) {\n                    return;\n                }\n                initAudioStats();\n                if (isSupervisorConnected) {\n                    const hangupPayload = await vendorConnector.supervisorDisconnect();\n                    Validator.validateClassObject(hangupPayload, SupervisorHangupResult);\n                    isSupervisorConnected = false;\n                    dispatchEvent(constants.EVENT_TYPE.SUPERVISOR_HANGUP, hangupPayload.calls);\n                }\n                let payload = await vendorConnector.acceptCall(message.data.call);\n                Validator.validateClassObject(payload, CallResult);\n                const { call } = payload;\n                dispatchEvent(call.callType.toLowerCase() === constants.CALL_TYPE.CALLBACK.toLowerCase() ?\n                    constants.EVENT_TYPE.CALL_STARTED : constants.EVENT_TYPE.CALL_CONNECTED, call);\n            } catch (e) {\n                isSupervisorConnected = false;\n                dispatchError(constants.ERROR_TYPE.CAN_NOT_ACCEPT_THE_CALL, e, constants.MESSAGE_TYPE.ACCEPT_CALL);\n            }\n        break;\n        case constants.MESSAGE_TYPE.DECLINE_CALL:\n            try {\n                const payload =  await vendorConnector.declineCall(message.data.call);\n                Validator.validateClassObject(payload, CallResult);\n                const { call } = payload;\n                dispatchEvent(constants.EVENT_TYPE.HANGUP, call);\n            } catch (e) {\n                dispatchError(constants.ERROR_TYPE.CAN_NOT_DECLINE_THE_CALL, e, constants.MESSAGE_TYPE.DECLINE_CALL);\n            }\n        break;\n        case constants.MESSAGE_TYPE.END_CALL:\n            try {\n                const payload = await vendorConnector.endCall(message.data.call, message.data.agentStatus);\n                Validator.validateClassObject(payload, HangupResult);\n                const activeCallsResult = await vendorConnector.getActiveCalls();\n                Validator.validateClassObject(activeCallsResult, ActiveCallsResult);\n                const activeCalls = activeCallsResult.activeCalls;\n                const { calls } = payload;\n                // after end calls from vendor side, if no more active calls, fire HANGUP, otherwise, fire PARTICIPANT_REMOVED\n                if (activeCalls.length === 0) {\n                    dispatchEvent(constants.EVENT_TYPE.HANGUP, calls);\n                } else {\n                    dispatchEvent(constants.EVENT_TYPE.PARTICIPANT_REMOVED, calls.length > 0 && calls[0]);\n                }\n            } catch (e) {\n                dispatchError(constants.ERROR_TYPE.CAN_NOT_END_THE_CALL, e, constants.MESSAGE_TYPE.END_CALL);\n            }\n        break;\n        case constants.MESSAGE_TYPE.MUTE:\n            try {\n                const payload = await vendorConnector.mute();\n                publishEvent({eventType: constants.EVENT_TYPE.MUTE_TOGGLE, payload});\n            } catch (e) {\n                dispatchError(constants.ERROR_TYPE.CAN_NOT_MUTE_CALL, e, constants.MESSAGE_TYPE.MUTE);\n            }\n        break;\n        case constants.MESSAGE_TYPE.UNMUTE:\n            try {\n                const payload = await vendorConnector.unmute();\n                publishEvent({eventType: constants.EVENT_TYPE.MUTE_TOGGLE, payload});\n            } catch (e) {\n                dispatchError(constants.ERROR_TYPE.CAN_NOT_UNMUTE_CALL, e, constants.MESSAGE_TYPE.UNMUTE);\n            }\n        break;\n        case constants.MESSAGE_TYPE.HOLD:\n            try {\n                const payload = await vendorConnector.hold(message.data.call);\n                publishEvent({eventType: constants.EVENT_TYPE.HOLD_TOGGLE, payload});\n            } catch (e) {\n                switch(getErrorType(e)) {\n                    case constants.ERROR_TYPE.INVALID_PARTICIPANT:\n                        dispatchError(constants.ERROR_TYPE.INVALID_PARTICIPANT, getErrorMessage(e), constants.MESSAGE_TYPE.HOLD);\n                        break;\n                    default:\n                        dispatchError(constants.ERROR_TYPE.CAN_NOT_HOLD_CALL, getErrorMessage(e), constants.MESSAGE_TYPE.HOLD);\n                        break;\n                }\n            }\n        break;\n        case constants.MESSAGE_TYPE.RESUME:\n            try {\n                const payload = await vendorConnector.resume(message.data.call);\n                publishEvent({eventType: constants.EVENT_TYPE.HOLD_TOGGLE, payload});\n            } catch (e) {\n                switch(getErrorType(e)) {\n                    case constants.ERROR_TYPE.INVALID_PARTICIPANT:\n                        dispatchError(constants.ERROR_TYPE.INVALID_PARTICIPANT, getErrorMessage(e), constants.MESSAGE_TYPE.RESUME);\n                        break;\n                    default:\n                        dispatchError(constants.ERROR_TYPE.CAN_NOT_RESUME_CALL, getErrorMessage(e), constants.MESSAGE_TYPE.RESUME);\n                        break;\n                }\n            }\n        break;\n        case constants.MESSAGE_TYPE.SET_AGENT_STATUS:\n            try {\n                const statusInfo = message.data.statusInfo || {};\n                const payload = await vendorConnector.setAgentStatus(message.data.agentStatus, statusInfo);\n                Validator.validateClassObject(payload, GenericResult);\n                const { success } = payload;\n                dispatchEvent(constants.EVENT_TYPE.SET_AGENT_STATUS_RESULT, { success });\n            } catch (e) {\n                switch(getErrorType(e)) {\n                    case constants.ERROR_TYPE.INVALID_AGENT_STATUS:\n                        dispatchError(constants.ERROR_TYPE.INVALID_AGENT_STATUS, getErrorMessage(e), constants.MESSAGE_TYPE.SET_AGENT_STATUS);\n                        break;\n                    default:\n                        dispatchError(constants.ERROR_TYPE.CAN_NOT_SET_AGENT_STATUS, getErrorMessage(e), constants.MESSAGE_TYPE.SET_AGENT_STATUS);\n                        break;\n                }\n            }\n        break;\n        case constants.MESSAGE_TYPE.GET_AGENT_STATUS:\n            try {\n                const payload = await vendorConnector.getAgentStatus();\n                Validator.validateClassObject(payload, AgentStatusInfo);\n                dispatchEvent(constants.EVENT_TYPE.GET_AGENT_STATUS_RESULT, payload);\n            } catch (e) {\n                dispatchError(constants.ERROR_TYPE.CAN_NOT_GET_AGENT_STATUS, getErrorMessage(e), constants.MESSAGE_TYPE.GET_AGENT_STATUS);\n            }\n        break;\n        case constants.MESSAGE_TYPE.DIAL:\n            try {\n                const payload = await vendorConnector.dial(new Contact(message.data.contact));\n                Validator.validateClassObject(payload, CallResult);\n                const { call } = payload;\n                dispatchEvent(constants.EVENT_TYPE.CALL_STARTED, call);\n            } catch (e) {\n                dispatchEvent(constants.EVENT_TYPE.CALL_FAILED);\n                switch(getErrorType(e)) {\n                    case constants.ERROR_TYPE.INVALID_DESTINATION:\n                        dispatchError(constants.ERROR_TYPE.INVALID_DESTINATION, getErrorMessage(e), constants.MESSAGE_TYPE.DIAL);\n                        break;\n                    case constants.ERROR_TYPE.GENERIC_ERROR:\n                        dispatchError(constants.ERROR_TYPE.GENERIC_ERROR, getErrorMessage(e), constants.MESSAGE_TYPE.DIAL);\n                        break;\n                    default:\n                        dispatchError(constants.ERROR_TYPE.CAN_NOT_START_THE_CALL, getErrorMessage(e), constants.MESSAGE_TYPE.DIAL);\n                        break;\n                }\n            }\n        break;\n        case constants.MESSAGE_TYPE.SEND_DIGITS:\n            try {\n                await vendorConnector.sendDigits(message.data.digits);\n            } catch (e) {\n                dispatchEventLog(constants.MESSAGE_TYPE.SEND_DIGITS, message.data.digits, true);\n            }\n            break;\n        case constants.MESSAGE_TYPE.GET_PHONE_CONTACTS:\n            try  {\n                const payload = await vendorConnector.getPhoneContacts(message.data.filter);\n                Validator.validateClassObject(payload, PhoneContactsResult);\n                const contacts = payload.contacts.map((contact) => {\n                    return {\n                        id: contact.id,\n                        endpointARN: contact.endpointARN,\n                        queue: contact.queue,\n                        phoneNumber: contact.phoneNumber,\n                        name: contact.name,\n                        type: contact.type,\n                        extension: contact.extension,\n                        availability: contact.availability\n                    };\n                });\n                dispatchEvent(constants.EVENT_TYPE.PHONE_CONTACTS, {\n                    contacts\n                });\n            } catch (e) {\n                dispatchError(constants.ERROR_TYPE.CAN_NOT_GET_PHONE_CONTACTS, e, constants.MESSAGE_TYPE.GET_PHONE_CONTACTS);\n            }\n        break;\n        case constants.MESSAGE_TYPE.SWAP_PARTICIPANTS:\n            try {\n                // TODO: Create PhoneCall from call1.callId & call2.callId\n                // TODO: rename to call1 and call2\n                const payload = await vendorConnector.swap(message.data.callToHold, message.data.callToResume);\n                publishEvent({ eventType: constants.EVENT_TYPE.PARTICIPANTS_SWAPPED, payload });\n            } catch (e) {\n                dispatchError(constants.ERROR_TYPE.CAN_NOT_SWAP_PARTICIPANTS, e, constants.MESSAGE_TYPE.SWAP_PARTICIPANTS);\n            }\n        break;\n        case constants.MESSAGE_TYPE.CONFERENCE:\n            try {\n                const payload = await vendorConnector.conference(message.data.calls);\n                publishEvent({ eventType: constants.EVENT_TYPE.PARTICIPANTS_CONFERENCED, payload });\n            } catch (e) {\n                dispatchError(constants.ERROR_TYPE.CAN_NOT_CONFERENCE, e, constants.MESSAGE_TYPE.CONFERENCE);\n            }\n        break;\n        case constants.MESSAGE_TYPE.ADD_PARTICIPANT:\n            try {\n                const payload = await vendorConnector.addParticipant(new Contact(message.data.contact), message.data.call);\n                publishEvent({ eventType: constants.EVENT_TYPE.PARTICIPANT_ADDED, payload });\n            } catch (e) {\n                // TODO: Can we avoid passing in reason field\n                dispatchEvent(constants.EVENT_TYPE.PARTICIPANT_REMOVED, {\n                    reason: constants.EVENT_TYPE.ERROR.toLowerCase()\n                });\n                switch(getErrorType(e)) {\n                    case constants.ERROR_TYPE.INVALID_DESTINATION:\n                        dispatchError(constants.ERROR_TYPE.INVALID_DESTINATION, getErrorMessage(e), constants.MESSAGE_TYPE.ADD_PARTICIPANT);\n                        break;\n                    default:\n                        dispatchError(constants.ERROR_TYPE.CAN_NOT_ADD_PARTICIPANT, getErrorMessage(e), constants.MESSAGE_TYPE.ADD_PARTICIPANT);\n                        break;\n                }\n            }\n        break;\n        case constants.MESSAGE_TYPE.PAUSE_RECORDING:\n            try {\n                const payload = await vendorConnector.pauseRecording(message.data.call);\n                publishEvent({ eventType: constants.EVENT_TYPE.RECORDING_TOGGLE, payload });\n            } catch (e) {\n                dispatchError(constants.ERROR_TYPE.CAN_NOT_PAUSE_RECORDING, e, constants.MESSAGE_TYPE.PAUSE_RECORDING);\n            }\n        break;\n        case constants.MESSAGE_TYPE.RESUME_RECORDING:\n            try {\n                const payload = await vendorConnector.resumeRecording(message.data.call);\n                publishEvent({ eventType: constants.EVENT_TYPE.RECORDING_TOGGLE, payload });\n            } catch (e) {\n                dispatchError(constants.ERROR_TYPE.CAN_NOT_RESUME_RECORDING, e, constants.MESSAGE_TYPE.RESUME_RECORDING);\n            }\n        break;\n        case constants.MESSAGE_TYPE.LOGOUT:\n            try {\n                const payload = await vendorConnector.logout();\n                Validator.validateClassObject(payload, LogoutResult);\n                const { success, loginFrameHeight } = payload;\n                dispatchEvent(constants.EVENT_TYPE.LOGOUT_RESULT, { success, loginFrameHeight });\n            } catch (e) {\n                dispatchError(constants.ERROR_TYPE.CAN_NOT_LOG_OUT, e, constants.MESSAGE_TYPE.LOGOUT);\n            }\n        break;\n        case constants.MESSAGE_TYPE.MESSAGE:\n            // TODO: Define a return type for handling message\n            vendorConnector.handleMessage(message.data.message);\n        break;\n        case constants.MESSAGE_TYPE.WRAP_UP_CALL:\n            vendorConnector.wrapUpCall(message.data.call);\n        break;\n        case constants.MESSAGE_TYPE.AGENT_AVAILABLE: {\n            agentAvailable = message.data.isAvailable;\n            if (agentAvailable) {\n                const activeCallsResult = await vendorConnector.getActiveCalls();\n                Validator.validateClassObject(activeCallsResult, ActiveCallsResult);\n                const activeCalls = activeCallsResult.activeCalls;\n                for (const callId in activeCalls) {\n                    const call = activeCalls[callId];\n                    const shouldReplay = call.callInfo ? call.callInfo.isReplayable : true;\n                    const isSupervisorCall = call.callAttributes && call.callAttributes.participantType === constants.PARTICIPANT_TYPE.SUPERVISOR;\n                    if (shouldReplay) {\n                        call.isReplayedCall = true;\n                        switch(call.state) {\n                            case constants.CALL_STATE.CONNECTED:\n                                if (isSupervisorCall) {\n                                    isSupervisorConnected = true;\n                                    dispatchEvent(constants.EVENT_TYPE.SUPERVISOR_CALL_CONNECTED, call);\n                                    break;\n                                }\n                                dispatchEvent(constants.EVENT_TYPE.CALL_CONNECTED, call);\n                                break;\n                            case constants.CALL_STATE.RINGING:\n                                if (isSupervisorCall) {\n                                    isSupervisorConnected = true;\n                                    dispatchEvent(constants.EVENT_TYPE.SUPERVISOR_CALL_STARTED, call);\n                                    break;\n                                }\n                                dispatchEvent(constants.EVENT_TYPE.CALL_STARTED, call);\n                                break;\n                            case constants.CALL_STATE.TRANSFERRING:\n                                dispatchEvent(constants.EVENT_TYPE.PARTICIPANT_ADDED, {\n                                    phoneNumber: call.contact.phoneNumber,\n                                    callInfo: call.callInfo,\n                                    initialCallHasEnded: call.callAttributes.initialCallHasEnded,\n                                    callId: call.callId\n                                });\n                                break;\n                            case constants.CALL_STATE.TRANSFERRED:\n                                dispatchEvent(constants.EVENT_TYPE.PARTICIPANT_CONNECTED, {\n                                    phoneNumber: call.contact.phoneNumber,\n                                    callInfo: call.callInfo,\n                                    initialCallHasEnded: call.callAttributes.initialCallHasEnded,\n                                    callId: call.callId\n                                });\n                                break;\n                            default:\n                                break;\n                        }\n                    }\n                }\n            }\n        }\n        break;\n        case constants.MESSAGE_TYPE.SET_AGENT_CONFIG:\n            try {\n                const result = await vendorConnector.setAgentConfig(message.data.config);\n                Validator.validateClassObject(result, GenericResult);\n                dispatchEvent(constants.EVENT_TYPE.AGENT_CONFIG_UPDATED, result);\n            } catch (e){\n                dispatchError(getErrorType(e) === constants.ERROR_TYPE.CAN_NOT_UPDATE_PHONE_NUMBER ? constants.ERROR_TYPE.CAN_NOT_UPDATE_PHONE_NUMBER : constants.ERROR_TYPE.CAN_NOT_SET_AGENT_CONFIG , getErrorMessage(e), constants.MESSAGE_TYPE.SET_AGENT_CONFIG);\n            }\n        break;\n        case constants.MESSAGE_TYPE.GET_SIGNED_RECORDING_URL:\n            try {\n                const { recordingUrl, vendorCallKey, callId } = message.data;\n                const result = await vendorConnector.getSignedRecordingUrl(recordingUrl, vendorCallKey, callId);\n                Validator.validateClassObject(result, SignedRecordingUrlResult);\n                dispatchEvent(constants.EVENT_TYPE.SIGNED_RECORDING_URL, result);\n            } catch (e) {\n                // In case of an error, we want to show an error message in the recording player\n                const signedRecordingUrlResult = new SignedRecordingUrlResult({\n                    success: false\n                });\n                dispatchEvent(constants.EVENT_TYPE.SIGNED_RECORDING_URL, signedRecordingUrlResult, false);\n                dispatchEventLog(constants.MESSAGE_TYPE.GET_SIGNED_RECORDING_URL, signedRecordingUrlResult, true);\n            }\n        break;\n        case constants.MESSAGE_TYPE.DOWNLOAD_VENDOR_LOGS:\n            vendorConnector.downloadLogs();\n        break;\n        case constants.MESSAGE_TYPE.LOG: {\n                const { logLevel, logMessage, payload } = message.data;\n                vendorConnector.logMessageToVendor(logLevel, logMessage, payload);\n            }\n        break;\n        case constants.MESSAGE_TYPE.SUPERVISE_CALL:\n            try {\n                isSupervisorConnected = true;\n                const result = await vendorConnector.superviseCall(message.data.call);\n                Validator.validateClassObject(result, SuperviseCallResult);\n                const agentConfigResult = await vendorConnector.getAgentConfig();\n                if(agentConfigResult.selectedPhone.type === constants.PHONE_TYPE.SOFT_PHONE) {\n                    dispatchEvent(constants.EVENT_TYPE.SUPERVISOR_CALL_CONNECTED, result.call);\n                } else {\n                    dispatchEvent(constants.EVENT_TYPE.SUPERVISOR_CALL_STARTED, result.call);\n                }\n            } catch (e){\n                isSupervisorConnected = false;\n                dispatchError(constants.ERROR_TYPE.CAN_NOT_SUPERVISE_CALL, e, constants.MESSAGE_TYPE.SUPERVISE_CALL);\n            }\n        break;\n        case constants.MESSAGE_TYPE.SUPERVISOR_DISCONNECT:\n            try {\n                const result = await vendorConnector.supervisorDisconnect(message.data.call);\n                Validator.validateClassObject(result, SupervisorHangupResult);\n                isSupervisorConnected = false;\n                dispatchEvent(constants.EVENT_TYPE.SUPERVISOR_HANGUP, result.calls);\n            } catch (e){\n                dispatchError(constants.ERROR_TYPE.CAN_NOT_DISCONNECT_SUPERVISOR, e, constants.MESSAGE_TYPE.SUPERVISOR_DISCONNECT);\n            }\n        break;\n        case constants.MESSAGE_TYPE.SUPERVISOR_BARGE_IN:\n            try {\n                const result = await vendorConnector.supervisorBargeIn(message.data.call);\n                Validator.validateClassObject(result, SuperviseCallResult);\n                dispatchEvent(constants.EVENT_TYPE.SUPERVISOR_BARGED_IN, result.call );\n            } catch (e){\n                dispatchError(constants.ERROR_TYPE.CAN_NOT_BARGE_IN_SUPERVISOR, e, constants.MESSAGE_TYPE.SUPERVISOR_BARGE_IN);\n            }\n        break;\n        default:\n            break;\n    }\n}\n\n\nasync function windowMessageHandler(message) {\n    switch (message.data.type) {\n        case constants.MESSAGE_TYPE.SETUP_CONNECTOR: {\n            const sfDomain = /^http[s]?:\\/\\/[\\w-.]+(\\.lightning\\.force\\.com|\\.lightning\\.pc-rnd\\.force\\.com|\\.stm\\.force\\.com|\\.salesforce\\.com|\\.my\\.salesforce-sites\\.com|\\.lightning\\.localhost\\.[\\w]+\\.force.com)$/;\n            const originUrl = new URL(message.origin);\n            const url = originUrl.protocol + '//' + originUrl.hostname;\n\n            if (sfDomain.test(url)) {\n                channelPort = message.ports[0];\n                channelPort.onmessage = channelMessageHandler;\n                dispatchEventLog(constants.MESSAGE_TYPE.SETUP_CONNECTOR, exposedConnectorConfig(message.data.connectorConfig), false);\n                try {\n                    const payload = await vendorConnector.init(message.data.connectorConfig);\n                    Validator.validateClassObject(payload, InitResult);\n                    if (payload.showLogin) {\n                        dispatchEvent(constants.EVENT_TYPE.SHOW_LOGIN, {\n                            loginFrameHeight: payload.loginFrameHeight\n                        });\n                    } else {\n                        setConnectorReady();\n                    }\n                } catch (e) {\n                    switch(getErrorType(e)) {\n                        case constants.ERROR_TYPE.INVALID_PARAMS:\n                            dispatchError(constants.ERROR_TYPE.INVALID_PARAMS, getErrorMessage(e), constants.MESSAGE_TYPE.SETUP_CONNECTOR);\n                            break;\n                        default:\n                            dispatchError(constants.ERROR_TYPE.CAN_NOT_LOG_IN, getErrorMessage(e), constants.MESSAGE_TYPE.SETUP_CONNECTOR);\n                            break;\n                    }\n                }\n            }\n            window.removeEventListener('message', windowMessageHandler);\n        }\n            break;\n        default:\n            break;\n    }\n}\n\nfunction exposedConnectorConfig(payload) {\n    payload = payload || {};\n    let obj = {};\n    //properties that are equal to key\n    CONNECTOR_CONFIG_EXPOSED_FIELDS.forEach(prop => {\n        if (payload.hasOwnProperty(prop)) {\n            obj[prop] = payload[prop];\n        }\n    });\n    //properties that start with key\n    CONNECTOR_CONFIG_EXPOSED_FIELDS_STARTSWITH.forEach(prop => {\n        Object.keys(payload).forEach(key => {\n            if (key.startsWith(prop)) {\n                obj[key] = payload[key];\n            }\n        });\n    });\n\n    return obj;\n}\n\nfunction validatePayload(payload, payloadType, errorType, eventType) {\n    try {\n        Validator.validateClassObject(payload, payloadType);\n        return true;\n    } catch (e) {\n        if (errorType) {\n            dispatchError(errorType, e, eventType);\n        }\n        return false;\n    }\n}\n\n/*========================== Exported Functions ==========================*/\n/**\n * Initialize a vendor connector\n * @param {VendorConnector} connector\n */\nexport function initializeConnector(connector) {\n    vendorConnector = connector;\n    window.addEventListener('message', windowMessageHandler);\n}\n\n/**\n * Publish an event or error log to Salesforce\n * @param {object} param\n * @param {string} param.eventType Any event type to be logged\n * @param {object} param.payload Any payload for the log that needs to be logged\n * @param {boolean} param.isError\n */\nexport function publishLog({ eventType, payload, isError }) {\n    dispatchEventLog(eventType, payload, isError);\n}\n\n/**\n * Publish a telephony error to Salesforce\n * @param {object} param\n * @param {(\"LOGIN_RESULT\"|\"LOGOUT_RESULT\"|\"CALL_STARTED\"|\"QUEUED_CALL_STARTED\"|\"CALL_CONNECTED\"|\"HANGUP\"|\"PARTICIPANT_CONNECTED\"|\"PARTICIPANT_ADDED\"|\"PARTICIPANTS_SWAPPED\"|\"PARTICIPANTS_CONFERENCED\"|\"MESSAGE\"|\"MUTE_TOGGLE\"|\"HOLD_TOGGLE\"|\"RECORDING_TOGGLE\"|\"AGENT_ERROR\"|\"SOFTPHONE_ERROR\")} param.eventType Event type to publish.\n * @param {object} param.error Error object representing the error\n */\nexport function publishError({ eventType, error }) {\n    switch(eventType) {\n        case constants.EVENT_TYPE.LOGIN_RESULT:\n            dispatchError(constants.ERROR_TYPE.CAN_NOT_LOG_IN, error, constants.EVENT_TYPE.LOGIN_RESULT);\n            break;\n        case constants.EVENT_TYPE.LOGOUT_RESULT:\n            dispatchError(constants.ERROR_TYPE.CAN_NOT_LOG_OUT, error, constants.EVENT_TYPE.LOGOUT_RESULT);\n            break;\n        case constants.EVENT_TYPE.CALL_STARTED:\n            dispatchError(constants.ERROR_TYPE.CAN_NOT_START_THE_CALL, error, constants.EVENT_TYPE.CALL_STARTED);\n            break;\n        case constants.EVENT_TYPE.QUEUED_CALL_STARTED:\n            dispatchError(constants.ERROR_TYPE.CAN_NOT_START_THE_CALL, error, constants.EVENT_TYPE.QUEUED_CALL_STARTED);\n            break;\n        case constants.EVENT_TYPE.CALL_CONNECTED:\n            dispatchError(constants.ERROR_TYPE.CAN_NOT_START_THE_CALL, error, constants.EVENT_TYPE.CALL_CONNECTED);\n            break;\n        case constants.EVENT_TYPE.HANGUP: \n            dispatchError(constants.ERROR_TYPE.CAN_NOT_END_THE_CALL, error, constants.EVENT_TYPE.HANGUP);\n            break;\n        case constants.EVENT_TYPE.PARTICIPANT_ADDED:\n            dispatchError(getErrorType(error) === constants.ERROR_TYPE.INVALID_PARTICIPANT ? constants.ERROR_TYPE.INVALID_PARTICIPANT : constants.ERROR_TYPE.CAN_NOT_ADD_PARTICIPANT, error, constants.EVENT_TYPE.PARTICIPANT_ADDED);\n            break;\n        case constants.EVENT_TYPE.PARTICIPANT_CONNECTED:\n            dispatchError(constants.ERROR_TYPE.CAN_NOT_CONNECT_PARTICIPANT, error, constants.EVENT_TYPE.PARTICIPANT_CONNECTED);\n            break;\n        case constants.EVENT_TYPE.PARTICIPANT_REMOVED:\n            dispatchError(constants.ERROR_TYPE.CAN_NOT_HANGUP_PARTICIPANT, error, constants.EVENT_TYPE.PARTICIPANT_REMOVED); \n            break;\n        case constants.EVENT_TYPE.MUTE_TOGGLE:\n            dispatchError(constants.ERROR_TYPE.CAN_NOT_TOGGLE_MUTE, error, constants.EVENT_TYPE.MUTE_TOGGLE);\n            break;\n        case constants.EVENT_TYPE.HOLD_TOGGLE: \n            dispatchError(getErrorType(error) === constants.ERROR_TYPE.INVALID_PARTICIPANT ? constants.ERROR_TYPE.INVALID_PARTICIPANT : constants.ERROR_TYPE.CAN_NOT_TOGGLE_HOLD, error, constants.EVENT_TYPE.HOLD_TOGGLE);\n            break;\n        case constants.EVENT_TYPE.RECORDING_TOGGLE:\n            dispatchError(constants.ERROR_TYPE.CAN_NOT_TOGGLE_RECORD, error, constants.EVENT_TYPE.RECORDING_TOGGLE);\n            break;\n        case constants.EVENT_TYPE.PARTICIPANTS_SWAPPED: \n            dispatchError(constants.ERROR_TYPE.CAN_NOT_SWAP_PARTICIPANTS, error, constants.EVENT_TYPE.PARTICIPANTS_SWAPPED);\n            break;\n        case constants.EVENT_TYPE.PARTICIPANTS_CONFERENCED:\n            dispatchError(constants.ERROR_TYPE.CAN_NOT_CONFERENCE, error, constants.EVENT_TYPE.PARTICIPANTS_CONFERENCED);\n            break;\n        case constants.EVENT_TYPE.AGENT_ERROR:\n            dispatchError(constants.ERROR_TYPE.AGENT_ERROR, error, constants.EVENT_TYPE.AGENT_ERROR);\n            break;\n        case constants.EVENT_TYPE.SOFTPHONE_ERROR:\n            switch(getErrorType(error)) {\n                case constants.ERROR_TYPE.UNSUPPORTED_BROWSER:\n                    dispatchError(constants.ERROR_TYPE.UNSUPPORTED_BROWSER, error, constants.EVENT_TYPE.SOFTPHONE_ERROR);\n                    break;\n                case constants.ERROR_TYPE.MICROPHONE_NOT_SHARED:\n                    dispatchError(constants.ERROR_TYPE.MICROPHONE_NOT_SHARED, error, constants.EVENT_TYPE.SOFTPHONE_ERROR);\n                    break;\n                default:\n                    dispatchError(constants.ERROR_TYPE.GENERIC_ERROR, error, constants.EVENT_TYPE.SOFTPHONE_ERROR);\n            }\n            break;\n        default:\n            console.error('Unhandled error scenario with arguments ', arguments);\n    }\n}\n\n/**\n * Publish an event to Sfdc. The event payload will be verified to be the correct type before being published. \n * @param {object} param\n * @param {(\"LOGIN_RESULT\"|\"LOGOUT_RESULT\"|\"CALL_STARTED\"|\"QUEUED_CALL_STARTED\"|\"CALL_CONNECTED\"|\"HANGUP\"|\"PARTICIPANT_CONNECTED\"|\"PARTICIPANT_ADDED\"|\"PARTICIPANTS_SWAPPED\"|\"PARTICIPANTS_CONFERENCED\"|\"MESSAGE\"|\"MUTE_TOGGLE\"|\"HOLD_TOGGLE\"|\"RECORDING_TOGGLE\")} param.eventType Event type to publish\n * @param {object} param.payload Payload for the event. Must to be an object of the payload class associated with the EVENT_TYPE else the event is NOT dispatched\n * @param {boolean} param.registerLog Boolean to opt out of registering logs for events\n * LOGIN_RESULT - GenericResult\n * LOGOUT_RESULT - LogoutResult\n * CALL_STARTED - CallResult\n * QUEUED_CALL_STARTED - CallResult\n * CALL_CONNECTED - CallResult\n * HANGUP - CallResult\n * PARTICIPANT_CONNECTED - ParticipantResult\n * PARTICIPANT_ADDED - ParticipantResult\n * PARTICIPANTS_SWAPPED - HoldToggleResult\n * PARTICIPANTS_CONFERENCED - HoldToggleResult\n * MESSAGE - object\n * MUTE_TOGGLE - MuteToggleResult\n * HOLD_TOGGLE - HoldToggleResult\n * RECORDING_TOGGLE - RecordingToggleResult\n */\nexport async function publishEvent({ eventType, payload, registerLog = true }) {\n    switch(eventType) {\n        case constants.EVENT_TYPE.LOGIN_RESULT: {\n            if (validatePayload(payload, GenericResult, constants.ERROR_TYPE.CAN_NOT_LOG_IN, constants.EVENT_TYPE.LOGIN_RESULT)) {\n                dispatchEvent(constants.EVENT_TYPE.LOGIN_RESULT, payload, registerLog);\n                if (payload.success) {\n                    setConnectorReady();\n                }\n            }\n            break;\n        }\n        case constants.EVENT_TYPE.LOGOUT_RESULT:\n            if (validatePayload(payload, LogoutResult, constants.ERROR_TYPE.CAN_NOT_LOG_OUT, constants.EVENT_TYPE.LOGOUT_RESULT)) {\n                dispatchEvent(constants.EVENT_TYPE.LOGOUT_RESULT, {\n                    success: payload.success,\n                    loginFrameHeight: payload.loginFrameHeight\n                }, registerLog);\n            }\n            break;\n        case constants.EVENT_TYPE.CALL_STARTED:\n            if (validatePayload(payload, CallResult, constants.ERROR_TYPE.CAN_NOT_START_THE_CALL, constants.EVENT_TYPE.CALL_STARTED)) {\n                dispatchEvent(constants.EVENT_TYPE.CALL_STARTED, payload.call, registerLog);\n            }\n            break;\n        case constants.EVENT_TYPE.QUEUED_CALL_STARTED:\n            if (validatePayload(payload, CallResult, constants.ERROR_TYPE.CAN_NOT_START_THE_CALL, constants.EVENT_TYPE.QUEUED_CALL_STARTED)) {\n                dispatchEvent(constants.EVENT_TYPE.QUEUED_CALL_STARTED, payload.call, registerLog);\n            }\n            break;\n        case constants.EVENT_TYPE.PREVIEW_CALL_STARTED:\n            if (validatePayload(payload, CallResult, constants.ERROR_TYPE.CAN_NOT_START_THE_CALL, constants.EVENT_TYPE.PREVIEW_CALL_STARTED)) {\n                dispatchEvent(constants.EVENT_TYPE.CALL_STARTED, payload.call, registerLog);\n            }\n            break;\n        case constants.EVENT_TYPE.CALL_CONNECTED:\n            if (validatePayload(payload, CallResult, constants.ERROR_TYPE.CAN_NOT_START_THE_CALL, constants.EVENT_TYPE.CALL_CONNECTED)) {\n                initAudioStats();\n                if (isSupervisorConnected) {\n                    const hangupPayload = await vendorConnector.supervisorDisconnect();\n                    Validator.validateClassObject(hangupPayload, SupervisorHangupResult);\n                    isSupervisorConnected = false;\n                    dispatchEvent(constants.EVENT_TYPE.SUPERVISOR_HANGUP, hangupPayload, registerLog);\n                    dispatchEvent(constants.EVENT_TYPE.CALL_CONNECTED, payload.call, registerLog);\n                    break;\n                } \n                dispatchEvent(constants.EVENT_TYPE.CALL_CONNECTED, payload.call, registerLog);\n            }\n            break;\n        case constants.EVENT_TYPE.HANGUP: {\n            if (validatePayload(payload, HangupResult, constants.ERROR_TYPE.CAN_NOT_END_THE_CALL, constants.EVENT_TYPE.HANGUP)) {\n                dispatchEvent(constants.EVENT_TYPE.HANGUP, payload.calls, registerLog);\n            }\n            break;\n        }\n        case constants.EVENT_TYPE.PARTICIPANT_ADDED: {\n            if (validatePayload(payload, ParticipantResult, constants.ERROR_TYPE.CAN_NOT_ADD_PARTICIPANT, constants.EVENT_TYPE.PARTICIPANT_ADDED)) {\n                const { initialCallHasEnded, callInfo, phoneNumber, callId } = payload;\n                dispatchEvent(constants.EVENT_TYPE.PARTICIPANT_ADDED, {\n                    initialCallHasEnded,\n                    callInfo,\n                    phoneNumber,\n                    callId\n                }, registerLog);\n            }\n            break;\n        }\n        case constants.EVENT_TYPE.PARTICIPANT_CONNECTED: {\n            if (validatePayload(payload, ParticipantResult, constants.ERROR_TYPE.CAN_NOT_CONNECT_PARTICIPANT, constants.EVENT_TYPE.PARTICIPANT_CONNECTED)) {\n                const { initialCallHasEnded, callInfo, phoneNumber, callId } = payload;\n                dispatchEvent(constants.EVENT_TYPE.PARTICIPANT_CONNECTED, {\n                    initialCallHasEnded,\n                    callInfo,\n                    phoneNumber,\n                    callId\n                }, registerLog);\n            }\n            break;\n        }\n        case constants.EVENT_TYPE.PARTICIPANT_REMOVED: {\n            // TODO: The logic here needs to be modified. Ideally firing CallResult with \n            // correct participantType should do the trick but we are firing PARTICIPANT_CONNECTED because of a bug W-8601645\n            // Once the bug is fixed, this code needs to be updated\n            if (validatePayload(payload, CallResult, constants.ERROR_TYPE.CAN_NOT_HANGUP_PARTICIPANT, constants.EVENT_TYPE.PARTICIPANT_REMOVED)) { \n                const { call } = payload;\n                const activeCallsResult = await vendorConnector.getActiveCalls();\n                if (validatePayload(activeCallsResult, ActiveCallsResult)) {\n                    // when no more active calls, fire HANGUP\n                    const activeCalls = activeCallsResult.activeCalls;\n                    if (activeCalls.length === 0) {\n                        dispatchEvent(constants.EVENT_TYPE.HANGUP, call, registerLog);\n                    } else if (call && call.callAttributes && call.callAttributes.participantType === constants.PARTICIPANT_TYPE.INITIAL_CALLER) {\n                        // when there is still transfer call, based on the state of the transfer call, fire PARTICIPANT_ADDED or PARTICIPANT_CONNECTED\n                        const transferCall = Object.values(activeCalls).filter((obj) => obj['callType'] === constants.CALL_TYPE.ADD_PARTICIPANT).pop();\n                        const event = transferCall.state === constants.CALL_STATE.TRANSFERRING ? constants.EVENT_TYPE.PARTICIPANT_ADDED : constants.EVENT_TYPE.PARTICIPANT_CONNECTED;\n                        dispatchEvent(event, {\n                            initialCallHasEnded : true\n                        })\n                    } else {\n                        dispatchEvent(constants.EVENT_TYPE.PARTICIPANT_REMOVED, {\n                            reason: call? call.reason : null\n                        }, registerLog);\n                    }\n                }\n            }\n            break;\n        }\n        case constants.EVENT_TYPE.MESSAGE:\n            dispatchEvent(constants.EVENT_TYPE.MESSAGE, payload, registerLog);\n            break;\n        // TODO: Add validations for the ACW & Wrap up ended\n        case constants.EVENT_TYPE.AFTER_CALL_WORK_STARTED:\n            dispatchEvent(constants.EVENT_TYPE.AFTER_CALL_WORK_STARTED, payload, registerLog);\n            break;\n        case constants.EVENT_TYPE.WRAP_UP_ENDED:\n            dispatchEvent(constants.EVENT_TYPE.WRAP_UP_ENDED, payload, registerLog);\n            break;\n        /* This is only added to aid in connector development */\n        case constants.EVENT_TYPE.REMOTE_CONTROLLER:\n            channelMessageHandler(payload);\n            break;\n        case constants.EVENT_TYPE.MUTE_TOGGLE:\n            if (validatePayload(payload, MuteToggleResult, constants.ERROR_TYPE.CAN_NOT_TOGGLE_MUTE, constants.EVENT_TYPE.MUTE_TOGGLE)) {\n                dispatchEvent(constants.EVENT_TYPE.MUTE_TOGGLE, payload, registerLog);\n            }\n            break;\n        case constants.EVENT_TYPE.HOLD_TOGGLE: {\n            const { isThirdPartyOnHold, isCustomerOnHold, calls} = payload;\n            if (validatePayload(payload, HoldToggleResult, constants.ERROR_TYPE.CAN_NOT_TOGGLE_HOLD, constants.EVENT_TYPE.HOLD_TOGGLE)) {\n                dispatchEvent(constants.EVENT_TYPE.HOLD_TOGGLE, {\n                    isThirdPartyOnHold,\n                    isCustomerOnHold,\n                    calls\n                }, registerLog);\n            }\n            break;\n        }\n        case constants.EVENT_TYPE.RECORDING_TOGGLE: {\n            const { isRecordingPaused,\n                contactId,\n                initialContactId,\n                instanceId,\n                region\n            } = payload;\n            if (validatePayload(payload, RecordingToggleResult, constants.ERROR_TYPE.CAN_NOT_TOGGLE_RECORD, constants.EVENT_TYPE.RECORDING_TOGGLE)) {\n                dispatchEvent(constants.EVENT_TYPE.RECORDING_TOGGLE, {\n                    isRecordingPaused,\n                    contactId,\n                    initialContactId,\n                    instanceId,\n                    region\n                }, registerLog);\n            }\n        break;\n        }\n        case constants.EVENT_TYPE.PARTICIPANTS_SWAPPED: {\n            if (validatePayload(payload, HoldToggleResult, constants.ERROR_TYPE.CAN_NOT_SWAP_PARTICIPANTS, constants.EVENT_TYPE.PARTICIPANTS_SWAPPED)) {\n                const { isThirdPartyOnHold, isCustomerOnHold, calls } = payload;\n                dispatchEvent(constants.EVENT_TYPE.HOLD_TOGGLE, {\n                    isThirdPartyOnHold,\n                    isCustomerOnHold,\n                    calls\n                }, registerLog);\n            }\n        }\n        break;\n        case constants.EVENT_TYPE.PARTICIPANTS_CONFERENCED: {\n            if (validatePayload(payload, HoldToggleResult, constants.ERROR_TYPE.CAN_NOT_CONFERENCE, constants.EVENT_TYPE.PARTICIPANTS_CONFERENCED)) {\n                const { isThirdPartyOnHold, isCustomerOnHold } = payload;\n                dispatchEvent(constants.EVENT_TYPE.HOLD_TOGGLE, {\n                    isThirdPartyOnHold,\n                    isCustomerOnHold\n                }, registerLog);\n            }\n        break;\n        }\n        case constants.EVENT_TYPE.UPDATE_AUDIO_STATS: {\n            if (validatePayload(payload, AudioStats)) {\n                if (payload.stats) {\n                    updateAudioStats(payload.stats);\n                }\n                if (payload.isAudioStatsCompleted && payload.callId) {\n                    const callId = payload.callId;\n                    const mos = getMOS();\n                    dispatchEvent(constants.EVENT_TYPE.UPDATE_AUDIO_STATS_COMPLETED, {callId, mos}, registerLog);\n                }\n            }\n            break;\n        }\n\n        case constants.EVENT_TYPE.SUPERVISOR_BARGED_IN: {\n            if (validatePayload(payload, SuperviseCallResult, constants.ERROR_TYPE.CAN_NOT_BARGE_IN_SUPERVISOR, constants.EVENT_TYPE.SUPERVISOR_BARGED_IN)) {\n                dispatchEvent(constants.EVENT_TYPE.SUPERVISOR_BARGED_IN, payload.call, registerLog);\n            }\n            break;\n        }\n\n        case constants.EVENT_TYPE.CALL_BARGED_IN: {\n            if (validatePayload(payload, SupervisedCallInfo,  constants.ERROR_TYPE.GENERIC_ERROR, constants.EVENT_TYPE.CALL_BARGED_IN)) {\n                dispatchEvent(constants.EVENT_TYPE.CALL_BARGED_IN, payload, registerLog);\n            }\n            break;\n        }\n\n        case constants.EVENT_TYPE.SUPERVISOR_CALL_STARTED: {\n            if (validatePayload(payload, SuperviseCallResult,  constants.ERROR_TYPE.CAN_NOT_SUPERVISE_CALL, constants.EVENT_TYPE.SUPERVISOR_CALL_STARTED)) {\n                isSupervisorConnected = true;\n                dispatchEvent(constants.EVENT_TYPE.SUPERVISOR_CALL_STARTED, payload.call, registerLog);\n            }\n            break;\n        }\n\n        case constants.EVENT_TYPE.SUPERVISOR_CALL_CONNECTED: {\n            if (validatePayload(payload, SuperviseCallResult,  constants.ERROR_TYPE.CAN_NOT_SUPERVISE_CALL, constants.EVENT_TYPE.SUPERVISOR_CALL_CONNECTED)) {\n                isSupervisorConnected = true;\n                dispatchEvent(constants.EVENT_TYPE.SUPERVISOR_CALL_CONNECTED, payload.call, registerLog);\n            }\n            break;\n        }\n\n        case constants.EVENT_TYPE.SUPERVISOR_HANGUP: {\n            if (validatePayload(payload, SupervisorHangupResult,  constants.ERROR_TYPE.CAN_NOT_DISCONNECT_SUPERVISOR, constants.EVENT_TYPE.SUPERVISOR_HANGUP)) {\n                isSupervisorConnected = false;\n                dispatchEvent(constants.EVENT_TYPE.SUPERVISOR_HANGUP, payload.calls, registerLog);\n            }\n            break;\n        }\n\n        case constants.EVENT_TYPE.SET_AGENT_STATUS: {\n            if (validatePayload(payload, AgentStatusInfo,  constants.ERROR_TYPE.CAN_NOT_SET_AGENT_STATUS, constants.EVENT_TYPE.SET_AGENT_STATUS)) {\n                const statusId = payload.statusId;\n                dispatchEvent(constants.EVENT_TYPE.SET_AGENT_STATUS, { statusId }, registerLog);\n            }\n            break;\n        }\n\n        case constants.EVENT_TYPE.GET_AGENT_STATUS: {\n            if (validatePayload(payload, AgentStatusInfo, constants.ERROR_TYPE.CAN_NOT_GET_AGENT_STATUS, constants.EVENT_TYPE.GET_AGENT_STATUS)) {\n                dispatchEvent(constants.EVENT_TYPE.GET_AGENT_STATUS, payload);\n            }\n            break;\n        }\n    }\n}","/*\n * Copyright (c) 2021, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: BSD-3-Clause\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause\n */\n\nexport { initializeConnector, publishEvent, publishError, publishLog } from './baseConnector.js';\nexport { log } from './logger.js';\nexport { Constants, ActiveCallsResult, AgentConfigResult, AgentConfig, RecordingToggleResult, ParticipantResult, SignedRecordingUrlResult,\n    PhoneContactsResult, CallResult, HangupResult, HoldToggleResult, InitResult, GenericResult, MuteToggleResult, LogoutResult,\n    CallInfo, PhoneCall, PhoneCallAttributes, Contact, Phone, AgentStatusInfo, AudioStatsElement, AudioStats, StatsInfo, VendorConnector, SuperviseCallResult, SupervisorHangupResult, SupervisedCallInfo } from './types.js';"],"sourceRoot":""}